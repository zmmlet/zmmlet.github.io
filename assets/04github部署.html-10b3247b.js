import{_ as t,Q as i,S as o,U as s,a4 as n,a6 as e,a7 as l,E as p}from"./framework-ca2498c6.js";const c="/assets/images/Snipaste_2022-09-29_16-28-15.png",r="/assets/images/Snipaste_2022-09-29_16-48-22.png",d="/assets/images/Snipaste_2022-09-29_16-50-16.png",u="/assets/images/Snipaste_2022-09-29_16-52-48.png",m="/assets/images/Snipaste_2022-09-29_16-58-49.png",v="/assets/images/Snipaste_2022-09-29_17-02-45.png",g={},h=l('<h1 id="github-部署" tabindex="-1"><a class="header-anchor" href="#github-部署" aria-hidden="true">#</a> github 部署</h1><h2 id="新建-github-仓库" tabindex="-1"><a class="header-anchor" href="#新建-github-仓库" aria-hidden="true">#</a> 新建 github 仓库</h2><ol><li>点击<code>New repository</code>进入新建仓库页面，填写仓库名称，点击<code>Create repository</code> 完成仓库新建 <img src="'+c+'" alt="" loading="lazy"></li><li>复制仓库地址显示 需要生成密钥 <img src="'+r+'" alt="" loading="lazy"></li></ol><h2 id="生成密钥" tabindex="-1"><a class="header-anchor" href="#生成密钥" aria-hidden="true">#</a> 生成密钥</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>需要安装 Git 工具</p></div><ol><li>找到用户目录 <code>C:\\Users\\用户名</code> 右键运行 <code>Git Bash Here</code></li><li>输入命令 <code>ssh-keygen -t rsa -C 【github登录邮箱】</code> 点击三次回车，在 <code>C:\\Users\\用户名</code> 文件夹下生成 <code>.ssh</code> 文件夹，文件夹内包含公钥<code>id_rsa.pub</code>和私钥<code>id_rsa</code></li><li>输入命令 <code>cd .ssh</code> 进入<code>.ssh</code> 文件夹，在输入<code>cat id_rsa.pub</code>查看公钥，将公钥复制</li><li>将复制的公钥添加到 github，点击 github 登录头像，选择 settings，进入添加公钥页面 <img src="'+d+'" alt="" loading="lazy"></li><li>点击 <code>New SSH key</code> 进入填写公钥页面。填写标题，粘贴第 4 步复制的公钥点击 <code>Add SSH key</code> 添加完成 <img src="'+u+`" alt="" loading="lazy"></li></ol><h2 id="修改项目打包配置" tabindex="-1"><a class="header-anchor" href="#修改项目打包配置" aria-hidden="true">#</a> 修改项目打包配置</h2><ol><li>部署到 <code>https://USERNAME.github.io/&lt;REPO&gt;</code> 的情况。找到项目中 <code>docs\\.vuepress\\config.js</code> 文件，将 <code>base</code> 修改为，新建 <code>github</code> 仓库的名称</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 网站标题</span>
  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 网站的描述</span>
  <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">&#39;./dist&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 设置编译后的输出目录./dist代表在工程的根目录下生成一个dist文件，里面是编译好的文件，可以拿dist直接部署</span>
  <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&#39;/zmmblog/&#39;</span> <span class="token comment">// 设置站点根路径 // 路径名为 &quot;/&lt;REPO&gt;/&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>如果你想要部署到 <code>https://USERNAME.github.io</code>。找到项目中 <code>docs\\.vuepress\\config.js</code> 文件，将 <code>base</code> 修改为<code>/</code>，<code>/</code>为默认值，可以不写</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">&#39;zh-CN&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 网站标题</span>
  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 网站的描述</span>
  <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">&#39;./dist&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 设置编译后的输出目录./dist代表在工程的根目录下生成一个dist文件，里面是编译好的文件，可以拿dist直接部署</span>
  <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token comment">// 设置站点根路径 // 路径名为 &quot;/&lt;REPO&gt;/&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编写自动化部署脚本" tabindex="-1"><a class="header-anchor" href="#编写自动化部署脚本" aria-hidden="true">#</a> 编写自动化部署脚本</h2><p>在项目根目录创建 <code>deploy.sh</code> 文件，编写脚本如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env sh</span>

<span class="token comment"># 确保脚本抛出遇到的错误</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>

<span class="token comment"># 生成静态文件</span>
<span class="token function">yarn</span> build

<span class="token comment"># 进入生成的文件夹</span>
<span class="token builtin class-name">cd</span> dist

<span class="token comment"># 如果是发布到自定义域名</span>
<span class="token comment"># echo &#39;www.yourwebsite.com&#39; &gt; CNAME</span>

<span class="token function">git</span> init
<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;deploy&#39;</span>

<span class="token comment"># # 如果你想要部署到 https://USERNAME.github.io</span>
<span class="token comment"># git push -f git@github.com:zmmlet/zmmlet.github.io.git master # 修改成自己的GitHub仓库地址和分支</span>


<span class="token comment"># 如果发布到 https://USERNAME.github.io/&lt;REPO&gt;  REPO=github上的项目</span>
<span class="token comment"># git push -f git@github.com:USERNAME/&lt;REPO&gt;.git master:gh-pages</span>
<span class="token function">git</span> push <span class="token parameter variable">-f</span> git@github.com:zmmlet/zmmblog.git master:gh-pages

<span class="token builtin class-name">cd</span> -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2>`,15),b={href:"http://deploy.sh",target:"_blank",rel:"noopener noreferrer"},k=s("img",{src:m,alt:"",loading:"lazy"},null,-1),_={href:"https://zmmlet.github.io/zmmblog/",target:"_blank",rel:"noopener noreferrer"},y=s("img",{src:v,alt:"",loading:"lazy"},null,-1);function f(E,S){const a=p("ExternalLinkIcon");return i(),o("div",null,[h,s("ol",null,[s("li",null,[n("点击 "),s("a",b,[n("deploy.sh"),e(a)]),n(" 将打包结果提交到远程仓库，注意这里提交到了 gh-pages 分支，我们查看下对应仓库分支的代码： "),k]),s("li",null,[n("仓库的 Settings -> Pages 中看到最后的地址为 "),s("a",_,[n("https://zmmlet.github.io/zmmblog/"),e(a)]),y])])])}const z=t(g,[["render",f],["__file","04github部署.html.vue"]]);export{z as default};
