const t=JSON.parse('{"key":"v-269808a8","path":"/frontend/css/CSS%E4%BC%AA%E7%B1%BB%E4%B8%8E%E4%BC%AA%E5%85%83%E7%B4%A0.html","title":"伪类和伪元素","lang":"zh-CN","frontmatter":{"title":"伪类和伪元素","order":1,"date":"2022-01-01T00:00:00.000Z","category":["CSS"],"tag":["前端","css伪类","css伪元素"],"sticky":true,"star":false,"footer":"这是测试显示的页脚","copyright":"无版权","figure":true,"description":"伪类和伪元素 提示 先看看 css 有哪些伪类和伪元素，伪类用于当已有元素处于的某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的，比如:hover。伪元素用于创建一些不在文档树中的元素，并为其添加样式，也就是虚拟存在的，比如::before。 伪类 类型 说明 :link 链接伪类，未访问链接 :visited 链接伪类，已访问链接 :active 链接伪类，鼠标点击时 :hover 链接伪类，鼠标悬停时 :not CSS 否定伪类 :focus 获得焦点的元素 :focus-within 表示一个元素获得焦点或该元素的后代元素获得焦点 :placeholder-shown 在 &lt;input&gt; 或 &lt;textarea&gt; 元素显示 placeholder text 时生效 :first-child 所属父元素的首个子元素 :nth-child 所属父元素的第 N 个子元素 :nth-last-child 所属父元素的第 N 个子元素，从最后一个计算 :nth-of-type 针对具有一组兄弟节点的标签, 用 n 来筛选出在一组兄弟节点的位置 :first-of-type 表示一组兄弟元素中其类型的第一个元素 :last-of-type 父元素的所有子元素中的最后一个选定元素 :empty 没有子元素的元素。子元素只可以是元素节点或文本（包括空格） :target 代表一个唯一的页面元素(目标元素)，其 id 与当前 URL 片段匹配 :checked 表示任何处于选中状态的 radio :enabled 表示任何被启用的（enabled）元素。如果一个元素能够被激活（如选择、点击或接受文本输入），或者能够获取焦点，则该元素是启用的 :disable 表示任何被禁用的元素","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/css/CSS%E4%BC%AA%E7%B1%BB%E4%B8%8E%E4%BC%AA%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"我睡着的时候不困唉"}],["meta",{"property":"og:title","content":"伪类和伪元素"}],["meta",{"property":"og:description","content":"伪类和伪元素 提示 先看看 css 有哪些伪类和伪元素，伪类用于当已有元素处于的某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的，比如:hover。伪元素用于创建一些不在文档树中的元素，并为其添加样式，也就是虚拟存在的，比如::before。 伪类 类型 说明 :link 链接伪类，未访问链接 :visited 链接伪类，已访问链接 :active 链接伪类，鼠标点击时 :hover 链接伪类，鼠标悬停时 :not CSS 否定伪类 :focus 获得焦点的元素 :focus-within 表示一个元素获得焦点或该元素的后代元素获得焦点 :placeholder-shown 在 &lt;input&gt; 或 &lt;textarea&gt; 元素显示 placeholder text 时生效 :first-child 所属父元素的首个子元素 :nth-child 所属父元素的第 N 个子元素 :nth-last-child 所属父元素的第 N 个子元素，从最后一个计算 :nth-of-type 针对具有一组兄弟节点的标签, 用 n 来筛选出在一组兄弟节点的位置 :first-of-type 表示一组兄弟元素中其类型的第一个元素 :last-of-type 父元素的所有子元素中的最后一个选定元素 :empty 没有子元素的元素。子元素只可以是元素节点或文本（包括空格） :target 代表一个唯一的页面元素(目标元素)，其 id 与当前 URL 片段匹配 :checked 表示任何处于选中状态的 radio :enabled 表示任何被启用的（enabled）元素。如果一个元素能够被激活（如选择、点击或接受文本输入），或者能够获取焦点，则该元素是启用的 :disable 表示任何被禁用的元素"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"我睡着的时候不困唉"}],["meta",{"property":"article:tag","content":"前端"}],["meta",{"property":"article:tag","content":"css伪类"}],["meta",{"property":"article:tag","content":"css伪元素"}],["meta",{"property":"article:published_time","content":"2022-01-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"伪类和伪元素\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我睡着的时候不困唉\\",\\"url\\":\\"https://zmmlet.github.io/zmmblog/\\"}]}"]]},"headers":[{"level":2,"title":"伪类","slug":"伪类","link":"#伪类","children":[]},{"level":2,"title":"伪元素","slug":"伪元素","link":"#伪元素","children":[]},{"level":2,"title":"伪类用法举例","slug":"伪类用法举例","link":"#伪类用法举例","children":[{"level":3,"title":"链接伪类","slug":"链接伪类","link":"#链接伪类","children":[]},{"level":3,"title":"否定伪类:not","slug":"否定伪类-not","link":"#否定伪类-not","children":[]},{"level":3,"title":":focus 焦点伪类","slug":"focus-焦点伪类","link":"#focus-焦点伪类","children":[]},{"level":3,"title":":focus-within","slug":"focus-within","link":"#focus-within","children":[]},{"level":3,"title":":placeholder-shown","slug":"placeholder-shown","link":"#placeholder-shown","children":[]},{"level":3,"title":":first-child","slug":"first-child","link":"#first-child","children":[]},{"level":3,"title":":nth-child","slug":"nth-child","link":"#nth-child","children":[]},{"level":3,"title":":nth-last-child","slug":"nth-last-child","link":"#nth-last-child","children":[]},{"level":3,"title":":nth-of-type","slug":"nth-of-type","link":"#nth-of-type","children":[]},{"level":3,"title":":first-of-type","slug":"first-of-type","link":"#first-of-type","children":[]},{"level":3,"title":":last-of-type","slug":"last-of-type","link":"#last-of-type","children":[]},{"level":3,"title":":empty","slug":"empty","link":"#empty","children":[]},{"level":3,"title":":targe","slug":"targe","link":"#targe","children":[]},{"level":3,"title":":checked","slug":"checked","link":"#checked","children":[]},{"level":3,"title":":enabled","slug":"enabled","link":"#enabled","children":[]},{"level":3,"title":":disable","slug":"disable","link":"#disable","children":[]}]},{"level":2,"title":"伪元素用法举例","slug":"伪元素用法举例","link":"#伪元素用法举例","children":[{"level":3,"title":"::after","slug":"after","link":"#after","children":[]},{"level":3,"title":"::before","slug":"before","link":"#before","children":[]},{"level":3,"title":"::first-letter","slug":"first-letter","link":"#first-letter","children":[]},{"level":3,"title":"::first-line","slug":"first-line","link":"#first-line","children":[]},{"level":3,"title":"::selection","slug":"selection","link":"#selection","children":[]}]}],"git":{},"readingTime":{"minutes":13.29,"words":3986},"filePathRelative":"frontend/css/CSS伪类与伪元素.md","localizedDate":"2022年1月1日","excerpt":"<h1> 伪类和伪元素</h1>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>先看看 css 有哪些伪类和伪元素，伪类用于当已有元素处于的某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的，比如:hover。伪元素用于创建一些不在文档树中的元素，并为其添加样式，也就是虚拟存在的，比如::before。</p>\\n</div>\\n<h2> 伪类</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>类型</th>\\n<th>说明</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>:link</td>\\n<td>链接伪类，未访问链接</td>\\n</tr>\\n<tr>\\n<td>:visited</td>\\n<td>链接伪类，已访问链接</td>\\n</tr>\\n<tr>\\n<td>:active</td>\\n<td>链接伪类，鼠标点击时</td>\\n</tr>\\n<tr>\\n<td>:hover</td>\\n<td>链接伪类，鼠标悬停时</td>\\n</tr>\\n<tr>\\n<td>:not</td>\\n<td>CSS 否定伪类</td>\\n</tr>\\n<tr>\\n<td>:focus</td>\\n<td>获得焦点的元素</td>\\n</tr>\\n<tr>\\n<td>:focus-within</td>\\n<td>表示一个元素获得焦点或该元素的后代元素获得焦点</td>\\n</tr>\\n<tr>\\n<td>:placeholder-shown</td>\\n<td>在 <code>&lt;input&gt;</code> 或 <code>&lt;textarea&gt;</code> 元素显示 placeholder text 时生效</td>\\n</tr>\\n<tr>\\n<td>:first-child</td>\\n<td>所属父元素的首个子元素</td>\\n</tr>\\n<tr>\\n<td>:nth-child</td>\\n<td>所属父元素的第 N 个子元素</td>\\n</tr>\\n<tr>\\n<td>:nth-last-child</td>\\n<td>所属父元素的第 N 个子元素，从最后一个计算</td>\\n</tr>\\n<tr>\\n<td>:nth-of-type</td>\\n<td>针对具有一组兄弟节点的标签, 用 n 来筛选出在一组兄弟节点的位置</td>\\n</tr>\\n<tr>\\n<td>:first-of-type</td>\\n<td>表示一组兄弟元素中其类型的第一个元素</td>\\n</tr>\\n<tr>\\n<td>:last-of-type</td>\\n<td>父元素的所有子元素中的最后一个选定元素</td>\\n</tr>\\n<tr>\\n<td>:empty</td>\\n<td>没有子元素的元素。子元素只可以是元素节点或文本（包括空格）</td>\\n</tr>\\n<tr>\\n<td>:target</td>\\n<td>代表一个唯一的页面元素(目标元素)，其 id 与当前 URL 片段匹配</td>\\n</tr>\\n<tr>\\n<td>:checked</td>\\n<td>表示任何处于选中状态的 radio</td>\\n</tr>\\n<tr>\\n<td>:enabled</td>\\n<td>表示任何被启用的（enabled）元素。如果一个元素能够被激活（如选择、点击或接受文本输入），或者能够获取焦点，则该元素是启用的</td>\\n</tr>\\n<tr>\\n<td>:disable</td>\\n<td>表示任何被禁用的元素</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
