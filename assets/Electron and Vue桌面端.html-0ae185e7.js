import{_ as e,Q as o,S as c,U as n,a4 as s,a6 as t,a7 as p,E as l}from"./framework-ca2498c6.js";const i="/assets/images/image-20220710113240185.png",r="/assets/images/image-20220710113310035.png",u="/assets/images/image-20220710113352363.png",d={},k=p('<h1 id="electron-vue桌面端" tabindex="-1"><a class="header-anchor" href="#electron-vue桌面端" aria-hidden="true">#</a> Electron+Vue桌面端</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>因具体业务需要，技术栈要能够对电脑硬盘文件进行读写。最开始使用技术栈为 javaFx 构建，使用过程中发现构建页面，自定义 UI 页面困难，而且整个生态环境非常不好，与 Winforms 一样，自定义一些控件相对比较困难，研究起来比较耗费事件，项目周期又紧急，所以决定放弃 javaFx 技术栈，寻找新的技术栈。在一轮新的技术调研后，考虑到代码的可维护性和自定义 UI 页面以及结合项目业务。方案还剩两个技术方案。</p><ul><li>方案一：<strong>C++</strong> 和 <strong>Qt</strong> 相结合</li><li>方案二： <strong>electron</strong> 和 <strong>vue 全家桶</strong> 最终采用<strong>采用方案二</strong>，方案二便于自定义页面，通过 <code>node.js</code> 的 <code>fs</code> 模块可以实现对硬盘的读写。再加上<code>scss</code>和<code>less</code> 和现有前端框架的支撑。能够满足自定义 UI 页面。再加上 <code>electron</code> 本身的生态环境较好。而且此业务场景下不需要桌面应用太高的执行效率。再加上便于前后端分离开发，提高了效率。简单说一下方案一，具有很好的跨平台性，<code>Qt</code>还有可视化编辑器，可以用来自定义 UI，而且执行效率更好，可以说是桌面端开发利器了，这里不用的原因是学习成本有点高，项目周期紧，没时间研究</li></ul><h2 id="项目环境" tabindex="-1"><a class="header-anchor" href="#项目环境" aria-hidden="true">#</a> 项目环境</h2>',5),v=n("code",null,"node.js v14.18.1",-1),m=n("code",null,"python3",-1),b=n("code",null,"c/c++编译环境",-1),g={href:"https://cli.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"yarn",-1),h=n("li",null,"注意事项：yarn 或 npm 镜像改为淘宝镜像",-1),y=n("h2",{id:"项目创建方式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#项目创建方式","aria-hidden":"true"},"#"),s(" 项目创建方式")],-1),f=n("h3",{id:"方式一-electron-vue",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方式一-electron-vue","aria-hidden":"true"},"#"),s(" 方式一：electron-vue")],-1),w={href:"https://simulatedgreg.gitbooks.io/electron-vue/content/cn/getting_started.html",target:"_blank",rel:"noopener noreferrer"},_=n("br",null,null,-1),x=p(`<h4 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建" aria-hidden="true">#</a> 项目创建</h4><ol><li>使用<code>vue init simulatedgreg/electron-vue my-project</code> 命令创建项目</li><li>cd 到项目根目录执行 <code>yarn</code> 或者 <code>npm install</code> 进行安装 node_modules 依赖</li><li>启动调试项目 <code>yarn dev</code> 或 <code>npm dev</code></li><li>打包执行 <code>yarn build</code> 或者 <code>npm build</code></li></ol><h4 id="配置-css-预处理" tabindex="-1"><a class="header-anchor" href="#配置-css-预处理" aria-hidden="true">#</a> 配置 CSS 预处理</h4><ol><li>安装 yarn add sass@1.25.0 和 yarn add sass-loader@8.0.2</li><li>在.electron-vue 文件夹下 webpack.renderer.config.js 文件中进行配置</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.scss$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue-style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sass-loader&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方式二-vue-add-electron-builder" tabindex="-1"><a class="header-anchor" href="#方式二-vue-add-electron-builder" aria-hidden="true">#</a> 方式二：vue add electron-builder</h3><h4 id="项目创建-1" tabindex="-1"><a class="header-anchor" href="#项目创建-1" aria-hidden="true">#</a> 项目创建</h4><ol><li>使用 <code>vue create my-project</code> 命令创建 vue 项目</li><li>使用 <code>vue add electron-builder</code> 添加 electron 到 vue 项目中</li><li>启动调试项目 <code>yarn electron:serve</code> 或 <code>npm electron:serve</code></li><li>打包执行 <code>yarn electron:build</code> 或者 <code>npm electron:build</code></li></ol><h2 id="electron-知识点总结" tabindex="-1"><a class="header-anchor" href="#electron-知识点总结" aria-hidden="true">#</a> electron 知识点总结</h2><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h3><ul><li>electron 进程分为<strong>主进程</strong>和<strong>渲染进程</strong>两部分</li><li>electron 版本不同对其写法有稍微的差别，具体以使用版本官方文档为准</li></ul><h3 id="去除原生导航栏" tabindex="-1"><a class="header-anchor" href="#去除原生导航栏" aria-hidden="true">#</a> 去除原生导航栏</h3><p>在主进程代码中配置<code>frame:false</code>关闭原生导航栏</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserWindow <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span>

<span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">888</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1608</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minHeight</span><span class="token operator">:</span> <span class="token number">888</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minWidth</span><span class="token operator">:</span> <span class="token number">1608</span><span class="token punctuation">,</span>
    <span class="token literal-property property">frame</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">//去除原生导航栏</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义菜单栏" tabindex="-1"><a class="header-anchor" href="#自定义菜单栏" aria-hidden="true">#</a> 自定义菜单栏</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserWindow<span class="token punctuation">,</span> Menu <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span>
<span class="token keyword">let</span> mainWindow
<span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建浏览器窗口</span>
  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enableRemoteModule</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许弹框</span>
    <span class="token literal-property property">resizable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否允许缩放</span>
    <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">webSecurity</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 设置允许跨域</span>
      <span class="token literal-property property">defaultFontSize</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token comment">//默认字体大小</span>
      <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否启用节点集成。默认为false</span>
      <span class="token literal-property property">contextIsolation</span><span class="token operator">:</span> <span class="token boolean">false</span>
      <span class="token comment">// nodeIntegration: p<wbr>rocess.env.ELECTRON_NODE_INTEGRATION, // 是否启用节点集成。默认为false</span>
      <span class="token comment">// contextIsolation: !p<wbr>rocess.env.ELECTRON_NODE_INTEGRATION</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// 准备模板菜单</span>
  <span class="token keyword">let</span> template <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;文件&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">submenu</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;选择文件&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;用户&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">submenu</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;切换用户&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;帮助&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">submenu</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;控制台&#39;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">openDevTools</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;bottom&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;关于&#39;</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
  <span class="token comment">// 加载菜单</span>
  <span class="token keyword">let</span> m <span class="token operator">=</span> Menu<span class="token punctuation">.</span><span class="token function">buildFromTemplate</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span>
  Menu<span class="token punctuation">.</span><span class="token function">setApplicationMenu</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义窗口事件" tabindex="-1"><a class="header-anchor" href="#自定义窗口事件" aria-hidden="true">#</a> 自定义窗口事件</h3><h4 id="_1-去除原生顶部菜单栏" tabindex="-1"><a class="header-anchor" href="#_1-去除原生顶部菜单栏" aria-hidden="true">#</a> 1. 去除原生顶部菜单栏</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserWindow<span class="token punctuation">,</span> ipcMain <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span>

<span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">888</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1608</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minHeight</span><span class="token operator">:</span> <span class="token number">888</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minWidth</span><span class="token operator">:</span> <span class="token number">1608</span><span class="token punctuation">,</span>
    <span class="token literal-property property">frame</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token comment">// 去除原生顶部菜单栏</span>
  mainWindow<span class="token punctuation">.</span><span class="token function">setMenu</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-在主进程中-ipcmain-进行定义通讯" tabindex="-1"><a class="header-anchor" href="#_2-在主进程中-ipcmain-进行定义通讯" aria-hidden="true">#</a> 2. 在主进程中 ipcMain 进行定义通讯</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* *******************************IPC通讯******************************* */</span>
<span class="token comment">// 窗口最小化</span>
ipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;min&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mainWindow<span class="token punctuation">.</span><span class="token function">minimize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 窗口最大化</span>
ipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mainWindow<span class="token punctuation">.</span><span class="token function">isMaximized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mainWindow<span class="token punctuation">.</span><span class="token function">unmaximize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    mainWindow<span class="token punctuation">.</span><span class="token function">maximize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 关闭窗口</span>
ipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mainWindow<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-在渲染进程中进行使用" tabindex="-1"><a class="header-anchor" href="#_3-在渲染进程中进行使用" aria-hidden="true">#</a> 3. 在渲染进程中进行使用</h4><h5 id="_3-1-electron-vue-创建项目渲染进程使用-ipc-引入方式" tabindex="-1"><a class="header-anchor" href="#_3-1-electron-vue-创建项目渲染进程使用-ipc-引入方式" aria-hidden="true">#</a> 3.1：electron-vue 创建项目渲染进程使用 ipc 引入方式</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">ipcRenderer</span><span class="token operator">:</span> ipc <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 使用主进程定义ipc通讯事件</span>
<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 最小化</span>
  <span class="token function">clickMinHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ipc<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;min&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 最大化</span>
  <span class="token function">clickMaxHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ipc<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 关闭</span>
  <span class="token function">clickCloseHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ipc<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-2-vue-add-electron-builder-创建项目渲染进程使用-ipc-引入方式" tabindex="-1"><a class="header-anchor" href="#_3-2-vue-add-electron-builder-创建项目渲染进程使用-ipc-引入方式" aria-hidden="true">#</a> 3.2：vue add electron-builder 创建项目渲染进程使用 ipc 引入方式</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">ipcRenderer</span><span class="token operator">:</span> ipc <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 使用主进程定义ipc通讯事件</span>
<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 最小化</span>
  <span class="token function">clickMinHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ipc<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;min&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 最大化</span>
  <span class="token function">clickMaxHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ipc<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 关闭</span>
  <span class="token function">clickCloseHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ipc<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打开指定路径文件夹" tabindex="-1"><a class="header-anchor" href="#打开指定路径文件夹" aria-hidden="true">#</a> 打开指定路径文件夹</h3><h4 id="_1-electron-vue-创建项目渲染进程中打开指定路径文件夹" tabindex="-1"><a class="header-anchor" href="#_1-electron-vue-创建项目渲染进程中打开指定路径文件夹" aria-hidden="true">#</a> 1：electron-vue 创建项目渲染进程中打开指定路径文件夹</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// shell 模块提供了集成其他桌面客户端的关联功能</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> shell <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>remote
<span class="token comment">// 以默认打开方式打开文件</span>
<span class="token keyword">let</span> path <span class="token operator">=</span> record<span class="token punctuation">.</span>filePath
shell<span class="token punctuation">.</span><span class="token function">openItem</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-vue-add-electron-builder-创建项目渲染进程中打开指定路径文件夹" tabindex="-1"><a class="header-anchor" href="#_2-vue-add-electron-builder-创建项目渲染进程中打开指定路径文件夹" aria-hidden="true">#</a> 2：vue add electron-builder 创建项目渲染进程中打开指定路径文件夹</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// shell 模块提供了集成其他桌面客户端的关联功能</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> shell <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 以默认打开方式打开文件</span>
<span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token string">&#39;D:/learningSpace/vue-electron&#39;</span>
shell<span class="token punctuation">.</span><span class="token function">openPath</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取本机取网卡物理地址" tabindex="-1"><a class="header-anchor" href="#读取本机取网卡物理地址" aria-hidden="true">#</a> 读取本机取网卡物理地址</h3><ol><li>安装 <code>yarn add getmac</code></li><li>使用</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> getMac <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;getmac&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default
<span class="token keyword">var</span> clientId <span class="token operator">=</span> <span class="token function">getMac</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>clientId<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嵌入式数据库使用" tabindex="-1"><a class="header-anchor" href="#嵌入式数据库使用" aria-hidden="true">#</a> 嵌入式数据库使用</h3><h4 id="_1-嵌入式数据库选型" tabindex="-1"><a class="header-anchor" href="#_1-嵌入式数据库选型" aria-hidden="true">#</a> 1. 嵌入式数据库选型</h4>`,36),j=p("<li><p>LocalStorage 存储的数据保存在浏览器中。存储容量很小，大概不会超过 10M，它是以键值对形式保存数据的，没有关联查询、条件查询的机制。</p></li><li><p>SessionStorage  跟  <code>LocalStorage</code>  很相似，区别是每次关闭会话，其中的内容会被清空。在窗口中打开页面会复制顶级浏览会话的上下文作为新会话的上下文。相同  <code>url</code>  的不同  <code>tabs</code>  页面，其中的值是不同的。有过期时间设置，想持久化存储数据，它是做不到的。</p></li><li><p>Web SQL 数据库  <code>API</code>  并不是  <code>HTML5</code>  规范的一部分，但是它是一个独立的规范。<code>WebSQL</code>  是在浏览器上模拟数据库，使用  <code>js</code>  来操作  <code>SQL</code>  完成对数据的读写。</p></li><li><p>Cookies 存储容量太小，只能存  4kb 的内容，而且每次与服务端交互，同域下的  <code>Cookie</code>  还会被携带到服务端，也没有关联查询、条件查询的机制。数据以  <code>Json</code>  格式保存在本地文件中，以这种方式存储一些用户的配置信息是完全没问题的。但要用这种方式存储大量结构化数据，就很不合理了。主要原因是：用这种方案操作数据是需要把文件中的所有数据都加载到客户端电脑的内存中去的。由于没有索引机制，关联查询、条件查询等操作效率不高，更新了某项数据之后，要持久化更新操作，又要重写整个文件。</p></li><li><p><code>IndexedDB</code>  是一种底层  <code>API</code>，用于在客户端存储大量的结构化数据。该  <code>API</code>  使用索引实现对数据的高性能搜索。<code>IndexedDB</code>  是一个事务型数据库系统，类似于基于  <code>SQL</code>  的  <code>RDBMS</code>。 然而，不像  <code>RDBMS</code>  使用固定列表<code>IndexedDB</code>  是一个基于  <code>js</code>  的面向对象数据库。<code>IndexedDB</code>  可以存储和检索用键索引的对象。只需要指定数据库模式，打开与数据库的连接，然后检索和更新一系列事务。</p></li>",5),E={href:"https://link.zhihu.com/?target=https%3A//sqlite.org/index.html",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"SQLite",-1),S=n("code",null,"SQL",-1),I=n("code",null,"SQLite",-1),L=n("code",null,"SQLite",-1),A=n("h4",{id:"_2-数据库安装和编译",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-数据库安装和编译","aria-hidden":"true"},"#"),s(" 2. 数据库安装和编译")],-1),N=n("li",null,[s("安装 sqlite "),n("code",null,"yarn add sqlite3@4.1.1")],-1),R=n("li",null,[s("安装 electron-rebuild "),n("code",null,"yarn add electron-rebuild@3.2.7")],-1),D=n("li",null,[s("在 package.json 中 scripts 添加 "),n("code",null,'"rebuild": "electron-rebuild -f -w sqlite3",')],-1),B=n("code",null,"yarn rebuild",-1),C=n("code",null,"node_sqlite3",-1),M={href:"https://blog.qianxiaoduan.com/archives/1604",target:"_blank",rel:"noopener noreferrer"},O=n("strong",null,"编译报错下载文件放在 node_modules 下的 sqlite3 文件夹",-1),W=n("img",{src:i,alt:"image-20220710113240185",loading:"lazy"},null,-1),P=n("strong",null,"编译成功标志",-1),U=n("img",{src:r,alt:"image-20220710113310035",loading:"lazy"},null,-1),F=p(`<h4 id="_3-数据库配置" tabindex="-1"><a class="header-anchor" href="#_3-数据库配置" aria-hidden="true">#</a> 3. 数据库配置</h4><ol><li>数据库配置</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> sqlite3 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;sqlite3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">verbose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> dbPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;sorting.db&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">sqlite3<span class="token punctuation">.</span>Database</span><span class="token punctuation">(</span>dbPath<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>封装 logger.js 抛出报错</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>挂在到 vue，在 main.js 中添加</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> db <span class="token keyword">from</span> <span class="token string">&#39;./db/index&#39;</span>
<span class="token keyword">import</span> logger <span class="token keyword">from</span> <span class="token string">&#39;./db/logger&#39;</span>
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$db <span class="token operator">=</span> db
<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$logger <span class="token operator">=</span> logger
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-数据库使用" tabindex="-1"><a class="header-anchor" href="#_4-数据库使用" aria-hidden="true">#</a> 4. 数据库使用</h4><ol><li>创建表</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/* 
CREATE TABLE TABLE_NAME 方式每次都会创建表，控制台会出现 Error: SQLITE_ERROR: table UPLOAD_RECORD already exists
所以采用 CREATE TABLE IF NOT EXISTS TABLE_NAME 方式创建表，解决以上报错问题
*/</span>
db<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * 测试 TEXT_TABLE
   * workCode 单号
   * planDate 计划时间
   * name 名称
   * relationId 关联id
   */</span>
  db<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">CREATE TABLE IF NOT EXISTS TEXT_TABLE(
    id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    workCode VARCHAR(255) NOT NULL,
    planDate VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    relationId VARCHAR(255) NOT NULL
    )</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">logger</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>新增</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">SQL</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">INSERT INTO TEXT_TABLE (workCode,planDte,name,relationId)
VALUES (&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>order<span class="token punctuation">.</span>workCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>order<span class="token punctuation">.</span>planDte<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>order<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>order<span class="token punctuation">.</span>relationId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;)</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$db<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token constant">SQL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$logger</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;新增成功&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>删除</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">SQL</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">DELETE FROM TEXT_TABLE WHERE id=1</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$db<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token constant">SQL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$logger</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;根据ID删除失败&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;根据ID删除成功&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>编辑</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">SQL</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">UPDATE TEXT_TABLE SET workCode=&#39;5787&#39;,planDte=&#39;2017878&#39;,name=&#39;WG55656&#39;,relationId=&#39;1212&#39; WHERE id = 1</span><span class="token template-punctuation string">\`</span></span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$db<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token constant">SQL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$logger</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$Notice<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;编辑失败&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;编辑成功&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>查询</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$db<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SELECT * FROM TEXT_TABLE</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;数据库查询视频分类&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打包配置" tabindex="-1"><a class="header-anchor" href="#打包配置" aria-hidden="true">#</a> 打包配置</h3><h4 id="_1-electron-vue-创建项目打包配置通过-package-json-进行" tabindex="-1"><a class="header-anchor" href="#_1-electron-vue-创建项目打包配置通过-package-json-进行" aria-hidden="true">#</a> 1：electron-vue 创建项目打包配置通过 package.json 进行</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tick-sorting&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.0.1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;An electron-vue project&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist/electron/main.js&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node .electron-vue/build.js &amp;&amp; electron-builder&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:dir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node .electron-vue/build.js &amp;&amp; electron-builder --dir&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:clean&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env BUILD_TARGET=clean node .electron-vue/build.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build:web&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env BUILD_TARGET=web node .electron-vue/build.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node .electron-vue/dev-runner.js --disable-gpu&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run pack:main &amp;&amp; npm run pack:renderer&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pack:main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=production webpack --progress --colors --config .electron-vue/webpack.main.config.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pack:renderer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cross-env NODE_ENV=production webpack --progress --colors --config .electron-vue/webpack.renderer.config.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;postinstall&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder install-app-deps&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;rebuild&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-rebuild -f -w sqlite3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;ev &quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron --version&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;productName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxxx系统名称&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 系统名称</span>
    <span class="token property">&quot;appId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.example.yourapp&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;buildDependenciesFromSource&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;nodeGypRebuild&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;npmRebuild&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;directories&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;output&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;asar&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 解决打包后数据库找不到数据文件，无法进行读写问题</span>
    <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;dist/electron/**/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dmg&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;contents&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">410</span><span class="token punctuation">,</span>
          <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/Applications&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">130</span><span class="token punctuation">,</span>
          <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;mac&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build/icons/icon.icns&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;win&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build/icons/icon.ico&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;linux&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build/icons&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;nsis&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;oneClick&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否一键安装，用户不可选择安装目录</span>
      <span class="token property">&quot;allowToChangeInstallationDirectory&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否允许用户自定义安装目录</span>
      <span class="token property">&quot;perMachine&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否开启安装时权限限制（此电脑或当前用户）</span>
      <span class="token property">&quot;allowElevation&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许请求提升，如果为fasle,则用户必须使用提升权限重新启动</span>
      <span class="token property">&quot;installerIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build/icons/icon.ico&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 安装图标</span>
      <span class="token property">&quot;uninstallerIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build/icons/icon.ico&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 卸载图标</span>
      <span class="token property">&quot;installerHeaderIcon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;build/icons/icon.ico&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 安装框图标</span>
      <span class="token property">&quot;createDesktopShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 创建桌面快捷方式</span>
      <span class="token property">&quot;createStartMenuShortcut&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 创建开始菜单图标</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;ant-design-vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.7.8&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;axios&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.18.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-settings&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.0.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-store&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-updater&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.6.5&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;fs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.0.1-security&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;fs-extra&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^10.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;getmac&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.20.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;is-electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.2.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;jquery&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.6.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;less&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2.7.3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;less-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4.1.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;multispinner&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.2.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;node-gyp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^9.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;simple-uploader.js&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.6.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;spark-md5&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sqlite3&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.1.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.5.16&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-devtools&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.1.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.0.6&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-router&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vuex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vuex-electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webuploader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.1.8&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;ajv&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.5.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-core&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.26.3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^7.1.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-minify-webpack-plugin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.3.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-plugin-transform-runtime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.23.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-preset-env&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.7.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-preset-stage-0&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.24.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;babel-register&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^6.26.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;cfonts&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.1.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;chalk&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.4.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;copy-webpack-plugin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.5.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;cross-env&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^5.1.6&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;css-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.28.11&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;del&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;devtron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.4.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.0.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-builder&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^20.19.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-debug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.5.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-devtools-installer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.2.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;electron-rebuild&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.2.7&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;file-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.1.11&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;html-webpack-plugin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.2.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;listr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.14.3&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;mini-css-extract-plugin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.4.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;node-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.6.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sass&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.25.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sass-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^8.0.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sass-resources-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.2.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;style-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.21.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;url-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.0.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-html-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.2.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^15.2.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-style-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.1.0&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;vue-template-compiler&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.5.16&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.15.1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack-cli&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.0.8&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack-dev-server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.1.4&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack-hot-middleware&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^2.22.2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;webpack-merge&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.1.3&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-vue-add-electron-builder-创建项目打包配置通过-vue-config-js-进行" tabindex="-1"><a class="header-anchor" href="#_2-vue-add-electron-builder-创建项目打包配置通过-vue-config-js-进行" aria-hidden="true">#</a> 2：vue add electron-builder 创建项目打包配置通过 vue.config.js 进行</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> dir<span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">BASE_URL</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_EVN</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;./&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;./&#39;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token constant">BASE_URL</span><span class="token punctuation">,</span>
  <span class="token literal-property property">outputDir</span><span class="token operator">:</span> <span class="token string">&#39;mine-exe&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">assetsDir</span><span class="token operator">:</span> <span class="token string">&#39;static&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lintOnSave</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">pluginOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">electronBuilder</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">removeElectronJunk</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">builderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">&#39;com.example.app&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">productName</span><span class="token operator">:</span> <span class="token string">&#39;xxxx项目名称&#39;</span><span class="token punctuation">,</span> <span class="token comment">//项目名，也是生成的安装文件名，即 xxxx.exe</span>
        <span class="token literal-property property">copyright</span><span class="token operator">:</span> <span class="token string">&#39;Copyright © 2022&#39;</span><span class="token punctuation">,</span> <span class="token comment">//版权信息</span>
        <span class="token literal-property property">directories</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token string">&#39;build&#39;</span> <span class="token comment">//输出文件路径</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">win</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//win相关配置</span>
          <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;./src/assets/icon.ico&#39;</span><span class="token punctuation">,</span> <span class="token comment">//图标，当前图标在根目录下，注意这里有两个坑</span>
          <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;nsis&#39;</span><span class="token punctuation">,</span> <span class="token comment">//利用nsis制作安装程序</span>
              <span class="token literal-property property">arch</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&#39;x64&#39;</span><span class="token punctuation">,</span> <span class="token comment">//64位</span>
                <span class="token string">&#39;ia32&#39;</span> <span class="token comment">//32位</span>
              <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">nsis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">oneClick</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否一键安装</span>
          <span class="token literal-property property">allowElevation</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许请求提升。 如果为false，则用户必须使用提升的权限重新启动安装程序。</span>
          <span class="token literal-property property">allowToChangeInstallationDirectory</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许修改安装目录</span>
          <span class="token literal-property property">installerIcon</span><span class="token operator">:</span> <span class="token string">&#39;./src/assets/icon.ico&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 安装图标</span>
          <span class="token literal-property property">uninstallerIcon</span><span class="token operator">:</span> <span class="token string">&#39;./src/assets/icon.ico&#39;</span><span class="token punctuation">,</span> <span class="token comment">//卸载图标</span>
          <span class="token literal-property property">installerHeaderIcon</span><span class="token operator">:</span> <span class="token string">&#39;./src/assets/icon.ico&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 安装时头部图标</span>
          <span class="token literal-property property">createDesktopShortcut</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 创建桌面图标</span>
          <span class="token literal-property property">createStartMenuShortcut</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 创建开始菜单图标</span>
          <span class="token literal-property property">shortcutName</span><span class="token operator">:</span> <span class="token string">&#39;测试项目&#39;</span> <span class="token comment">// 桌面图标名称</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">publish</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">provider</span><span class="token operator">:</span> <span class="token string">&#39;generic&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 服务器提供商 也可以是GitHub等等</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://xxxxx/&#39;</span> <span class="token comment">// 服务器地址</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    config<span class="token punctuation">.</span>resolve<span class="token punctuation">.</span>alias
      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;@&#39;</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;@api&#39;</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;src/api&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;@assets&#39;</span><span class="token punctuation">,</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;src/assets&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 配置CSS处理</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">sass</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">prependData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
          @import &quot;@/scss/variables.scss&quot;;
        </span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 如果你不需要生产环境的 source map，可以将其设置为 false 以加速生产环境构建</span>
  <span class="token literal-property property">productionSourceMap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//生产环境取消 console.log</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>optimization<span class="token punctuation">.</span>minimizer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>terserOptions<span class="token punctuation">.</span>compress<span class="token punctuation">.</span>drop_console <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 服务代理</span>
  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3078</span><span class="token punctuation">,</span>
    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;/servers-api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;http://127.0.0.1:8090&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">ws</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token operator">!</span><span class="token punctuation">[</span>image<span class="token punctuation">.</span>png<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>p9<span class="token operator">-</span>juejin<span class="token punctuation">.</span>byteimg<span class="token punctuation">.</span>com<span class="token operator">/</span>tos<span class="token operator">-</span>cn<span class="token operator">-</span>i<span class="token operator">-</span>k3u1fbpfcp<span class="token operator">/</span>68b360fcd3614713a7721e2a9af32a91<span class="token operator">~</span>tplv<span class="token operator">-</span>k3u1fbpfcp<span class="token operator">-</span>watermark<span class="token punctuation">.</span>image<span class="token operator">?</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目技术点" tabindex="-1"><a class="header-anchor" href="#项目技术点" aria-hidden="true">#</a> 项目技术点</h2><h3 id="遇到问题" tabindex="-1"><a class="header-anchor" href="#遇到问题" aria-hidden="true">#</a> 遇到问题</h3>`,25),V={href:"http://fex.baidu.com/webuploader/",target:"_blank",rel:"noopener noreferrer"},Q=n("code",null,"webuploader",-1),H=p(`<ul><li>由于<code>webuploader</code>上传组件，是从本地进行选择文件或者文件夹，对文件进行分片上传的，也就是<code>webuploader</code>选择文件后，会将本地文件的数据格式包装成 webuploader 组件所需要的文件上传分片数据，并且生成<code>Filemd5</code>用来记录文件分片，从而达到断点续传。</li><li>现有业务场景是直接读取本地文件夹路径进行获取文件，读出来的文件格式无法直接通过<code>webuploader</code>上传组件的 <code>addFiles()</code> 方法将文件添加到上传队列</li></ul><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h3><h4 id="方案一-fs-createreadstream-读取文件" tabindex="-1"><a class="header-anchor" href="#方案一-fs-createreadstream-读取文件" aria-hidden="true">#</a> 方案一：fs.createReadStream() 读取文件</h4><p>通过<code>node.js</code>的<code>fs</code>模块的<code>fs.createReadStream()</code> 方法读取文件，获取一个可读文件流数据，再通过<code>new Blob()</code> 将文件流转换为<code>Blob</code>对象，再通过 <code>new File()</code> 对 <code>Blob</code> 对象进行包装，从而获取文件名称、文件大小、和文件类型等信息。再将<code>file</code>对象通过 <code>webuploader</code> 的 <code>addFiles()</code> 方法添加到上传队列</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> readStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;文件全路径&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> blobParts
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  blobParts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;mp4&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;文件全路径&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  blobParts<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>blobParts<span class="token punctuation">,</span> keyArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  files<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
  <span class="token comment">//end</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 读取过程中出错了，清空数据</span>
  blobParts<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> blobParts<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方案二-fs-readfile-读取文件" tabindex="-1"><a class="header-anchor" href="#方案二-fs-readfile-读取文件" aria-hidden="true">#</a> 方案二：fs.readFile() 读取文件</h4><p>通过<code>node.js</code>的<code>fs</code>模块的<code>fs.readFile()</code> 方法读取文件，获取一个可读文件流数据，再通过<code>new Blob()</code> 将文件流转换为<code>Blob</code>对象，再通过 <code>new File()</code> 对 <code>Blob</code> 对象进行包装，从而获取文件名称、文件大小、和文件类型等信息。再将<code>file</code>对象通过 <code>webuploader</code> 的 <code>addFiles()</code> 方法添加到上传队列</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;文件全路径&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;mp4&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;文件全路径&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token punctuation">[</span>blob<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><ul><li><strong>读取文件的两种方案对比：</strong> 第一种方案执行效率较慢，第二种方案执行效率较高，在具体和 <code>webuploader</code> 文件上传组件相结合时，第一种上传较为稳定，不会出现分片上传断开请求连接。第二种方案，执行上传过程中出现文件传输中断，传输连接被取消（对比两次转换出来的文件流和文件数据没有不同，未找到具体原因）。由于此项目不需要特别高的执行效率，所以采用第一种文件读取方案。</li><li><strong>上传组件选型：</strong> 如果没有老项目的约束，建议选型较新的上传组件库，<strong><em>webuploader 上传组件库已经停止维护</em></strong>，组件库选型应该做到以下几点 <ol><li>目前还在维护</li><li>有较好的生态或者社区</li></ol></li></ul><h2 id="遇到报错" tabindex="-1"><a class="header-anchor" href="#遇到报错" aria-hidden="true">#</a> 遇到报错</h2><h3 id="下载运行依赖失败" tabindex="-1"><a class="header-anchor" href="#下载运行依赖失败" aria-hidden="true">#</a> 下载运行依赖失败</h3><ol><li>报错截图（原因是网络不好，导致运行编译需的包文件下载失败）</li></ol><figure><img src="`+u+'" alt="image-20220710113352363.png" tabindex="0" loading="lazy"><figcaption>image-20220710113352363.png</figcaption></figure><ol><li><p>解决办法：下载对应包文件，放到 C:\\Users\\xxx\\AppData\\Local\\electron\\Cache 目录下</p></li><li><p>对应编译打包报错：下载对应包文件放到 C:\\Users\\xxx\\AppData\\Local\\electron-builder\\Cache 目录下</p></li></ol><h3 id="运行白屏问题" tabindex="-1"><a class="header-anchor" href="#运行白屏问题" aria-hidden="true">#</a> 运行白屏问题</h3><ol><li>可能是语法错误导致主进程无法渲染，解决办法根据报错信息修改代码</li><li>开发环境下无报错，但是白屏可以尝试清除本地应用缓存,缓存目录 C:\\Users\\xxx\\AppData\\Roaming\\Electron\\Cache</li></ol><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',18),$={href:"https://www.electronjs.org/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://simulatedgreg.gitbooks.io/electron-vue/content/cn/getting_started.html",target:"_blank",rel:"noopener noreferrer"},G={href:"http://nodejs.cn/api/fs.html",target:"_blank",rel:"noopener noreferrer"},X={href:"http://fex.baidu.com/webuploader/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://blog.qianxiaoduan.com/archives/1604",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://www.zhihu.com/question/264999651",target:"_blank",rel:"noopener noreferrer"};function K(Z,nn){const a=l("ExternalLinkIcon");return o(),c("div",null,[k,n("ul",null,[n("li",null,[s("环境："),v,s("，"),m,s("，"),b,s("，"),n("a",g,[s("vue-cli"),t(a)]),s("，"),q]),h]),y,f,n("p",null,[n("a",w,[s("electron-vue"),t(a)]),s(" 提供了 electron 和 vue 相结合的模板，优点：便于快速搭建项目，在一定程度上减少了配置的繁琐。缺点：版本过于稳定（过于老旧）进行升级可能带来其他问题。"),_]),x,n("ol",null,[j,n("li",null,[n("p",null,[s("SQLite 官网地址："),n("a",E,[s("https://sqlite.org/index.html"),t(a)]),s(),T,s("  是一个进程内的库，实现了自给自足的、无服务器的、零配置的、事务性的  "),S,s("  数据库引擎。它是一个零配置的数据库，这意味着与其他数据库不一样，我们不需要在系统中配置。就像其他数据库，"),I,s("  引擎不是一个独立的进程，可以按应用程序需求进行静态或动态连接。"),L,s("  直接访问其存储文件。")])])]),A,n("ol",null,[N,R,D,n("li",null,[s("使用 "),B,s(" 运行对 sqlite3 进行编译。编译依赖于 C++环境和 Pyhton 环境，编译成功标志如下。如果遇到下载 "),C,s(" 编译失败报错可参考 "),n("a",M,[s("https://blog.qianxiaoduan.com/archives/1604"),t(a)]),O,W,P,U])]),F,n("p",null,[s("由于老项目大文件上传组件，采用了 "),n("a",V,[s("webuploader"),t(a)]),s("，作为上传组件，新项目直接调用老项目上传接口，对接老项目数据。所以新项目也使用"),Q,s("作为上传组件,简单说一下我遇到的问题：")]),H,n("ul",null,[n("li",null,[s("electron "),n("a",$,[s("官网"),t(a)])]),n("li",null,[s("electron-vue "),n("a",z,[s("官网"),t(a)])]),n("li",null,[s("node.js "),n("a",G,[s("fs 模块"),t(a)])]),n("li",null,[s("weuploader "),n("a",X,[s("weuploader API"),t(a)])]),n("li",null,[s("sqlite3 启动、打包编译报错： "),n("a",J,[s("https://blog.qianxiaoduan.com/archives/1604"),t(a)])]),n("li",null,[s("Electron 和其他的桌面开发技术栈对比： "),n("a",Y,[s("https://www.zhihu.com/question/264999651"),t(a)])])])])}const an=e(d,[["render",K],["__file","Electron and Vue桌面端.html.vue"]]);export{an as default};
