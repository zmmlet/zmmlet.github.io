const e=JSON.parse('{"key":"v-c55c5a6e","path":"/frontend/react/React%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF.html","title":"React 组件通讯","lang":"zh-CN","frontmatter":{"title":"React 组件通讯","order":1,"date":"2022-11-07T00:00:00.000Z","category":["前端框架"],"tag":["组件通讯","组件props","Context组件通讯"],"sticky":true,"star":false,"footer":"这是测试显示的页脚","copyright":"无版权","description":"React 组件通讯 提示 组件是独立且封闭的单元，默认情况下，只能使用组件自己的数据。在组件化过程中，我们将一个完整的功能 拆分成多个组件，以更好的完成整个应用的功能。而在这个过程中，多个组件之间不可避免的要共享某些数据 。为了实现这些功能，就需要打破组件的独立封闭性，让其与外界沟通。这个过程就是组件通讯。 props 组件是封闭的,要接受外部数据通过 props 来实现 props 作用:接收传递给组件的数据 传递数据:给组件标签添加属性 接收数据:函数组件通过参数 props接收数据,类组件通过 this.props 接收数据","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/react/React%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF.html"}],["meta",{"property":"og:site_name","content":"我睡着的时候不困唉"}],["meta",{"property":"og:title","content":"React 组件通讯"}],["meta",{"property":"og:description","content":"React 组件通讯 提示 组件是独立且封闭的单元，默认情况下，只能使用组件自己的数据。在组件化过程中，我们将一个完整的功能 拆分成多个组件，以更好的完成整个应用的功能。而在这个过程中，多个组件之间不可避免的要共享某些数据 。为了实现这些功能，就需要打破组件的独立封闭性，让其与外界沟通。这个过程就是组件通讯。 props 组件是封闭的,要接受外部数据通过 props 来实现 props 作用:接收传递给组件的数据 传递数据:给组件标签添加属性 接收数据:函数组件通过参数 props接收数据,类组件通过 this.props 接收数据"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"我睡着的时候不困唉"}],["meta",{"property":"article:tag","content":"组件通讯"}],["meta",{"property":"article:tag","content":"组件props"}],["meta",{"property":"article:tag","content":"Context组件通讯"}],["meta",{"property":"article:published_time","content":"2022-11-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"React 组件通讯\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我睡着的时候不困唉\\",\\"url\\":\\"https://zmmlet.github.io/zmmblog/\\"}]}"]]},"headers":[{"level":2,"title":"props","slug":"props","link":"#props","children":[{"level":3,"title":"函数组件通讯","slug":"函数组件通讯","link":"#函数组件通讯","children":[]},{"level":3,"title":"类组件通讯","slug":"类组件通讯","link":"#类组件通讯","children":[]},{"level":3,"title":"props 的特点","slug":"props-的特点","link":"#props-的特点","children":[]},{"level":3,"title":"组件通讯三种方式","slug":"组件通讯三种方式","link":"#组件通讯三种方式","children":[]}]},{"level":2,"title":"组件通讯-context","slug":"组件通讯-context","link":"#组件通讯-context","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"实现思路","slug":"实现思路","link":"#实现思路","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"props 深入","slug":"props-深入","link":"#props-深入","children":[{"level":3,"title":"children 属性","slug":"children-属性","link":"#children-属性","children":[]},{"level":3,"title":"props 校验","slug":"props-校验","link":"#props-校验","children":[]},{"level":3,"title":"props 默认值","slug":"props-默认值","link":"#props-默认值","children":[]}]},{"level":2,"title":"类的静态属性 static","slug":"类的静态属性-static","link":"#类的静态属性-static","children":[]}],"git":{},"readingTime":{"minutes":5.99,"words":1796},"filePathRelative":"frontend/react/React组件通讯.md","localizedDate":"2022年11月7日","excerpt":"<h1> React 组件通讯</h1>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p><strong>组件</strong>是独立且封闭的单元，默认情况下，只能使用组件自己的数据。在组件化过程中，我们将一个完整的功能\\n拆分成多个组件，以更好的完成整个应用的功能。而在这个过程中，多个组件之间不可避免的要共享某些数据\\n。为了实现这些功能，就需要打破组件的独立封闭性，让其与外界沟通。这个过程就是<strong>组件通讯</strong>。</p>\\n</div>\\n<h2> props</h2>\\n<ul>\\n<li>组件是封闭的,要接受外部数据通过 <code>props</code> 来实现</li>\\n<li><code>props</code> 作用:接收传递给组件的数据</li>\\n<li>传递数据:给组件标签添加属性</li>\\n<li>接收数据:函数组件通过参数 <code>props</code>接收数据,类组件通过 <code>this.props</code> 接收数据</li>\\n</ul>","autoDesc":true}');export{e as data};
