import{_ as p,Q as o,S as c,U as n,a4 as s,a6 as t,a5 as i,a7 as e,E as l}from"./framework-ca2498c6.js";const u="/assets/images/Snipaste_2023-01-29_18-09-32.png",r="/assets/images/Snipaste_2023-01-29_18-09-40.png",d="/assets/images/Snipaste_2023-01-10_15-07-53.png",k="/assets/images/Snipaste_2023-01-30_10-54-05.png",v="/assets/images/Snipaste_2023-01-04_12-52-54.png",m="/assets/images/Snipaste_2023-01-04_12-52-154.png",b="/assets/images/Snipaste_2023-01-08_16-00-48.png",g={},h=e('<h1 id="zero-admin" tabindex="-1"><a class="header-anchor" href="#zero-admin" aria-hidden="true">#</a> zero-admin</h1><blockquote><p>zero-admin 是一个后台前端解决方案，它基于 vue3 和 ant-design-vue 实现。它使用了最新的前端技术栈【vue3+vue-router+typescript+axios+ant-design-vue+pinia+mockjs+plopjs+vite+Vitest】实现了动态路由、权限验证；自定义 Vue 指令封装；规范项目代码风格；项目内置脚手架解决文件创建混乱，相似业务模块需要频繁拷贝代码或文件问题；Echarts 图形库进行封装；axios 请求拦截封装，请求 api 统一管理；通过 mockjs 模拟数据；对生产环境构建进行打包优化，实现了打包 gzip 压缩、代码混淆，去除 console 打印，打包体积分析等；提炼了典型的业务模型，提供了丰富的功能组件，它可以帮助你快速搭建企业级中后台产品原型</p></blockquote><p><img src="'+u+'" alt="图片" loading="lazy"><img src="'+r+'" alt="" loading="lazy"></p><h2 id="推荐-vscode-编辑器插件" tabindex="-1"><a class="header-anchor" href="#推荐-vscode-编辑器插件" aria-hidden="true">#</a> 推荐 VsCode 编辑器插件</h2>',4),q={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://marketplace.visualstudio.com/items?itemName=Vue.volar",target:"_blank",rel:"noopener noreferrer"},f={href:"https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"ts-中-vue导入的类型支持",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ts-中-vue导入的类型支持","aria-hidden":"true"},"#"),s(" TS 中"),n("code",null,".vue"),s("导入的类型支持")],-1),w={href:"https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/johnsoncodehk/volar/discussions/471#discussioncomment-1361669",target:"_blank",rel:"noopener noreferrer"},j=e("<ol><li>Disable the built-in TypeScript Extension <ol><li>Run <code>Extensions: Show Built-in Extensions</code> from VSCode&#39;s command palette</li><li>Find <code>TypeScript and JavaScript Language Features</code>, right click and select <code>Disable (Workspace)</code></li></ol></li><li>Reload the VSCode window by running <code>Developer: Reload Window</code> from the command palette.</li></ol>",1),S=n("h2",{id:"项目获取",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#项目获取","aria-hidden":"true"},"#"),s(" 项目获取")],-1),z={href:"https://gitee.com/zmmlet/zero-admin.git",target:"_blank",rel:"noopener noreferrer"},C=n("h2",{id:"自定义-vite-配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自定义-vite-配置","aria-hidden":"true"},"#"),s(" 自定义 Vite 配置")],-1),E={href:"https://vitejs.dev/config/",target:"_blank",rel:"noopener noreferrer"},D=e(`<h2 id="项目依赖安装" tabindex="-1"><a class="header-anchor" href="#项目依赖安装" aria-hidden="true">#</a> 项目依赖安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="开发环境运行-编译和热重新加载" tabindex="-1"><a class="header-anchor" href="#开发环境运行-编译和热重新加载" aria-hidden="true">#</a> 开发环境运行（编译和热重新加载）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="打包部署运行-生产打包添加类型检查、编译" tabindex="-1"><a class="header-anchor" href="#打包部署运行-生产打包添加类型检查、编译" aria-hidden="true">#</a> 打包部署运行（生产打包添加类型检查、编译）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),V={id:"运行单元测试-vitest",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#运行单元测试-vitest","aria-hidden":"true"},"#",-1),P={href:"https://vitest.dev/",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> test:unit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),I={id:"语法规则和代码风格检查-eslint",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#语法规则和代码风格检查-eslint","aria-hidden":"true"},"#",-1),M={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},R=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> lint
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="功能列表" tabindex="-1"><a class="header-anchor" href="#功能列表" aria-hidden="true">#</a> 功能列表</h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 项目创建</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 配置项目代码风格 .prettierrc.json</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 配置.vscode setting.json 文件，配置保存格式化</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 添加 SCSS 到项目进行 CSS 预处理</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 配置 vscode 别名跳转规则</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 安装 ant design vue 并配置自动加载</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 配置 less 预处理，并自定义 ant Design Vue UI 主题</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 解决 vite 首屏加载缓慢问题</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> pinia 数据持久化</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> 解决 pinia 使用报错问题</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> Layout 布局</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> Axios 封装</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> 菜单图标动态绑定</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> Vitest 单元测试</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> 集成打印插件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> i<wbr>mport.meta.glob 批量导入文件夹下文件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> 配置 .env</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> 自定义按钮权限指令</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> 动态路由</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> 路由权限</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> 按钮权限(目前和登录账号有关，和具体页面无关)</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> Echarts 集成</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> 路由懒加载</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> 项目打包优化</label><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-24"> 打包 gzip 压缩</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> 代码混淆</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> 去除生产环境 console</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> 打包体积分析插件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> 代码拆包，将静态资源分类</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> 传统浏览器兼容性支持</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-30" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-30"> CDN 内容分发网络（Content Delivery Network）</label></li></ul></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-31" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-31"> 项目集成自定义 cli 解决项目重复复制代码问题</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-32" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-32"> 集成 mockjs</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-33" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-33"> 读取 makdown 文档，编写组件说明文档</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-34" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-34"> maptalks + threejs demo 示例</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-35" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-35"> 使用 postcss-pxtorem、autoprefixer 插件 px 自动转换为 rem 和自动添加浏览器兼容前缀</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-36" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-36"> Monorepo</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-37" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-37"> 基于 sh 脚本对项目进行一键部署</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-38" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-38"> 图形编辑器</label><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-39" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-39"> 流程图</label></li></ul></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-40" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-40"> 国际化</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-41" disabled="disabled"><label class="task-list-item-label" for="task-item-41"> CI/CD</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-42" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-42"> 自动化部署</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-43" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-43"> 使用 commitizen 规范 git 提交,存在 plopfile.js 和 commitlint 提交规范 导入模式问题&quot;type&quot;: &quot;module&quot;冲突问题，导致目前 commitizen 规范 git 提交验证暂时不可用</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-44" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-44"> husky</label></li></ul><h2 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建" aria-hidden="true">#</a> 项目创建</h2><ol><li>项目创建命令 pnpm create vite</li><li>选择对应初始配置项</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Progress: resolved <span class="token number">1</span>, reused <span class="token number">1</span>, downloaded <span class="token number">0</span>, added <span class="token number">1</span>, <span class="token keyword">done</span>
√ Project name: <span class="token punctuation">..</span>. zero-admin
√ Select a framework: » Vue
√ Select a variant: » Customize with create-vue ↗
Packages: +1

Vue.js - The Progressive JavaScript Framework

√ Add TypeScript? <span class="token punctuation">..</span>. No / Yes
√ Add JSX Support? <span class="token punctuation">..</span>. No / Yes
√ Add Vue Router <span class="token keyword">for</span> Single Page Application development? <span class="token punctuation">..</span>. No / Yes
√ Add Pinia <span class="token keyword">for</span> state management? <span class="token punctuation">..</span>. No / Yes
√ Add Vitest <span class="token keyword">for</span> Unit Testing? <span class="token punctuation">..</span>. No / Yes
√ Add an End-to-End Testing Solution? » No
√ Add ESLint <span class="token keyword">for</span> code quality? <span class="token punctuation">..</span>. No / Yes
√ Add Prettier <span class="token keyword">for</span> code formatting? <span class="token punctuation">..</span>. No / Yes

Scaffolding project <span class="token keyword">in</span> D:<span class="token punctuation">\\</span>learningSpace<span class="token punctuation">\\</span>code<span class="token punctuation">\\</span>vue-project<span class="token punctuation">\\</span>zero-admin<span class="token punctuation">..</span>.

Done. Now run:

<span class="token builtin class-name">cd</span> zero-admin
<span class="token function">pnpm</span> <span class="token function">install</span>
<span class="token function">pnpm</span> lint
<span class="token function">pnpm</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="初始项目依赖安装" tabindex="-1"><a class="header-anchor" href="#初始项目依赖安装" aria-hidden="true">#</a> 初始项目依赖安装</h2><ol><li><code>pnpm add ant-design-vue --save</code></li><li><code>pnpm add unplugin-vue-components -D</code></li><li><code>pnpm add axios</code></li><li><code>pnpm add sass-loader@7.2.0 sass@1.22.10 -D</code></li><li><code>pnpm add less -D</code></li></ol><h2 id="配置项目代码风格-prettierrc-json" tabindex="-1"><a class="header-anchor" href="#配置项目代码风格-prettierrc-json" aria-hidden="true">#</a> 配置项目代码风格 .prettierrc.json</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;stylelintIntegration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;eslintIntegration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;printWidth&quot;</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token comment">//单行长度</span>
  <span class="token property">&quot;tabWidth&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">//缩进长度</span>
  <span class="token property">&quot;useTabs&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//使用空格代替tab缩进</span>
  <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//句末使用分号</span>
  <span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//使用单引号</span>
  <span class="token property">&quot;endOfLine&quot;</span><span class="token operator">:</span> <span class="token string">&quot;auto&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置保存-ctrl-s-自动格式化代码" tabindex="-1"><a class="header-anchor" href="#配置保存-ctrl-s-自动格式化代码" aria-hidden="true">#</a> 配置保存（Ctrl + s）自动格式化代码</h2><p>在项目中创建.vscode 文件夹中创建 setting.json 文件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;source.fixAll&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;editor.formatOnSave&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;[vue]&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;editor.defaultFormatter&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esbenp.prettier-vscode&quot;</span>
  <span class="token punctuation">}</span> <span class="token comment">// 默认格式化工具选择prettier</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加-scss-到项目进行-css-预处理" tabindex="-1"><a class="header-anchor" href="#添加-scss-到项目进行-css-预处理" aria-hidden="true">#</a> 添加 SCSS 到项目进行 CSS 预处理</h2><ol><li><p><code>pnpm add sass-loader@7.2.0 sass@1.22.10 -D</code></p></li><li><p>新建<code>styles/scss</code> 文件夹，新建 <code>index.scss</code>文件</p></li><li><p>在<code>vite.config.ts</code> 文件中配置</p></li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>css<span class="token operator">:</span> <span class="token punctuation">{</span>
  preprocessorOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 配置 scss 预处理</span>
    scss<span class="token operator">:</span> <span class="token punctuation">{</span>
      additionalData<span class="token operator">:</span> <span class="token string">&#39;@import &quot;@/style/scss/index.scss&quot;;&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目根目录新建-jsconfig-json-文件" tabindex="-1"><a class="header-anchor" href="#项目根目录新建-jsconfig-json-文件" aria-hidden="true">#</a> 项目根目录新建 jsconfig.json 文件</h2><p>配置 vscode 别名跳转规则</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;emitDecoratorMetadata&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;experimentalDecorators&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@components/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/components/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@setting/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/setting/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@views/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/views/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@assets/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/assets/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@config/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/config/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@api/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/api/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@utils/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/utils/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@styles/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/styles/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;@store/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src/store/*&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>vite.config.ts</code> 文件中配置对应文件夹别名</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>resolve<span class="token operator">:</span> <span class="token punctuation">{</span>
  alias<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;@&quot;</span><span class="token operator">:</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token constant">URL</span></span><span class="token punctuation">(</span><span class="token string">&quot;./src&quot;</span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;@comp&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;./src/components&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;.mjs&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.js&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.ts&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.jsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.tsx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.json&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.vue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-ant-design-vue-并配置自动加载" tabindex="-1"><a class="header-anchor" href="#安装-ant-design-vue-并配置自动加载" aria-hidden="true">#</a> 安装 ant design vue 并配置自动加载</h2><p>安装 UI 和自动加载插件 <code>pnpm add ant-design-vue --save</code><code>pnpm add unplugin-vue-components -D</code> 在 vite.config.ts 引入配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 引入 ant design vue 按需加载</span>
<span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&quot;unplugin-vue-components/vite&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AntDesignVueResolver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;unplugin-vue-components/resolvers&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 插件</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ant design vue 按需加载</span>
    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      resolvers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">AntDesignVueResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span> importStyle<span class="token operator">:</span> <span class="token string">&quot;less&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置-less-预处理-并自定义-ant-design-vue-ui-主题" tabindex="-1"><a class="header-anchor" href="#配置-less-预处理-并自定义-ant-design-vue-ui-主题" aria-hidden="true">#</a> 配置 less 预处理，并自定义 ant Design Vue UI 主题</h2><p>安装 <code>pnpm add less -D</code> 在 vite.config.ts 引入配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 插件</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ant design vue 按需加载</span>
    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      resolvers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">AntDesignVueResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span> importStyle<span class="token operator">:</span> <span class="token string">&quot;less&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>

  css<span class="token operator">:</span> <span class="token punctuation">{</span>
    preprocessorOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 自定义 ant desing vue 主题样式</span>
      less<span class="token operator">:</span> <span class="token punctuation">{</span>
        modifyVars<span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&quot;@primary-color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
          <span class="token string-property property">&quot;@border-radius-base&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0px&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 组件/浮层圆角</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        javascriptEnabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pinia-数据持久化" tabindex="-1"><a class="header-anchor" href="#pinia-数据持久化" aria-hidden="true">#</a> pinia 数据持久化</h2><p>pnpm add pinia-plugin-persist --save</p><h2 id="解决-pinia-使用报错问题" tabindex="-1"><a class="header-anchor" href="#解决-pinia-使用报错问题" aria-hidden="true">#</a> 解决 pinia 使用报错问题</h2><p>使用</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> userStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/stores/modules/user&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> usersto <span class="token operator">=</span> <span class="token function">userStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;store :&gt;&gt; &quot;</span><span class="token punctuation">,</span> usersto<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>报错 <img src="`+d+`" alt="" loading="lazy"></p><p>解决方法</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&quot;@/stores/index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> userStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/stores/modules/user&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> usersto <span class="token operator">=</span> <span class="token function">userStore</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;store :&gt;&gt; &quot;</span><span class="token punctuation">,</span> usersto<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="layout-布局" tabindex="-1"><a class="header-anchor" href="#layout-布局" aria-hidden="true">#</a> Layout 布局</h2><h2 id="axios-封装" tabindex="-1"><a class="header-anchor" href="#axios-封装" aria-hidden="true">#</a> Axios 封装</h2><p>pnpm add axios --save</p><h2 id="菜单图标动态绑定" tabindex="-1"><a class="header-anchor" href="#菜单图标动态绑定" aria-hidden="true">#</a> 菜单图标动态绑定</h2><ol><li>动态创建</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// ICON.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createVNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> $Icon <span class="token keyword">from</span> <span class="token string">&quot;@ant-design/icons-vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Icon</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token punctuation">{</span> icon<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> icon <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>$Icon<span class="token punctuation">[</span>icon<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>引入使用</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>about <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Icon</span> <span class="token attr-name">:icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>icon<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> Icon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/setting/ICON&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> icon <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;AppstoreOutlined&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="打包-gzip-压缩" tabindex="-1"><a class="header-anchor" href="#打包-gzip-压缩" aria-hidden="true">#</a> 打包 gzip 压缩</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 引入 gzip 压缩</span>
<span class="token keyword">import</span> viteCompression <span class="token keyword">from</span> <span class="token string">&quot;vite-plugin-compression&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// https://vitejs.dev/config/</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">vueJsx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// 打包压缩，主要是本地gzip，如果服务器配置压缩也可以</span>
    <span class="token function">viteCompression</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      verbose<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      disable<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      threshold<span class="token operator">:</span> <span class="token number">10240</span><span class="token punctuation">,</span>
      algorithm<span class="token operator">:</span> <span class="token string">&quot;gzip&quot;</span><span class="token punctuation">,</span>
      ext<span class="token operator">:</span> <span class="token string">&quot;.gz&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>server {
  #端口号，不同的程序，复制时，需要修改其端口号
        listen      3031;
  #服务器地址，可以为IP地址，本地程序时，可以设置为localhost
        server_name  localhost;
        client_max_body_size 2G;

    # 开启gzip
        gzip on;
    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
        gzip_min_length 1k;
    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
        gzip_comp_level 1;
    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
        gzip_types text/html text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
        gzip_vary on;
    # 禁用IE 6 gzip
        gzip_disable &quot;MSIE [1-6]\\.&quot;;
    # 设置压缩所需要的缓冲区大小
        gzip_buffers 32 4k;
    # 设置gzip压缩针对的HTTP协议版本
        gzip_http_version 1.0;

  #程序所在目录
        root D:/learningSpace/code/vue-project/zero-admin/dist;
        charset utf-8;
            index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location @rewrites {
            rewrite ^(.+)$ /index.html last;
        }

  #程序映射地址，将【zero-service】改为你程序名称，将【proxy_pass】 改为你自己的后台地址
        location /zero-service {
            proxy_pass http://localhost:9099/zero-service;
            proxy_cookie_path / /zero-service;
        }
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码混淆" tabindex="-1"><a class="header-anchor" href="#代码混淆" aria-hidden="true">#</a> 代码混淆</h2><p>pnpm add terser -D</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 打包配置</span>
  build<span class="token operator">:</span> <span class="token punctuation">{</span>
    chunkSizeWarningLimit<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token comment">// hunk 大小警告的限制（以 kbs 为单位）</span>
    minify<span class="token operator">:</span> <span class="token string">&quot;terser&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 代码混淆  boolean | &#39;terser&#39; | &#39;esbuild&#39; ,当设置为 &#39;terser&#39; 时必须先安装 Terser pnpm add terser -D</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="去除生产环境-console" tabindex="-1"><a class="header-anchor" href="#去除生产环境-console" aria-hidden="true">#</a> 去除生产环境 console</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 打包配置</span>
  build<span class="token operator">:</span> <span class="token punctuation">{</span>
    terserOptions<span class="token operator">:</span> <span class="token punctuation">{</span>
      compress<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// warnings: false,</span>
        drop_console<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 打包时删除console</span>
        drop_debugger<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 打包时删除 debugger</span>
        pure_funcs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;console.log&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;console.warn&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      output<span class="token operator">:</span> <span class="token punctuation">{</span>
        comments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 去掉注释内容</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="打包体积分析插件" tabindex="-1"><a class="header-anchor" href="#打包体积分析插件" aria-hidden="true">#</a> 打包体积分析插件</h2><ol><li>安装 <code>pnpm add rollup-plugin-visualizer -D</code></li><li>vite.config.ts 配置</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="传统浏览器兼容性支持" tabindex="-1"><a class="header-anchor" href="#传统浏览器兼容性支持" aria-hidden="true">#</a> 传统浏览器兼容性支持</h2><ol><li>安装 <code>pnpm add @vitejs/plugin-legacy -D</code></li><li>在 vite.config.ts 中配置</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> legacyPlugin <span class="token keyword">from</span> <span class="token string">&quot;@vitejs/plugin-legacy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> command<span class="token punctuation">,</span> mode <span class="token punctuation">}</span><span class="token operator">:</span> ConfigEnv<span class="token punctuation">)</span><span class="token operator">:</span> UserConfig <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">legacyPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        targets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;chrome 52&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 需要兼容的目标列表，可以设置多个</span>
        <span class="token comment">// additionalLegacyPolyfills: [&quot;regenerator-runtime/runtime&quot;], // 面向IE11时需要此插件</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>添加传统浏览器兼容性支持，打包后在 dist 文件夹下 index.html 文件中确认 <img src="`+k+'" alt="" loading="lazy"></li></ol><h2 id="cdn-内容分发网络-content-delivery-network" tabindex="-1"><a class="header-anchor" href="#cdn-内容分发网络-content-delivery-network" aria-hidden="true">#</a> CDN 内容分发网络（Content Delivery Network）</h2><ol><li>插件安装<code>pnpm add vite-plugin-cdn-import -D -w</code></li><li>vite.config.ts 配置</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="vitest-单元测试" tabindex="-1"><a class="header-anchor" href="#vitest-单元测试" aria-hidden="true">#</a> Vitest 单元测试</h2>',62),L={href:"https://cn.vitest.dev/guide/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://juejin.cn/post/7148371296055722015",target:"_blank",rel:"noopener noreferrer"},F=e(`<ol><li>Vitest 测试已经在项目初始化的时候添加</li><li>vue 组件测试 <code>pnpm add @vue/test-utils -D</code></li><li>测试规则，添加查看 <code>vite.config.ts</code> 文件</li><li>编写 vue 组件</li></ol><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Count: {{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>name: {{ props.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handle<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击事件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;1111&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> count <span class="token operator">=</span> ref<span class="token operator">&lt;</span>number<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> msg <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">handle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  count<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;props.message==&quot;</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>编写测试文件</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> test<span class="token punctuation">,</span> expect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vitest&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vue/test-utils&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Count <span class="token keyword">from</span> <span class="token string">&quot;../index.vue&quot;</span><span class="token punctuation">;</span>

test<span class="token punctuation">.</span><span class="token function">concurrent</span><span class="token punctuation">(</span><span class="token string">&quot;基础js测试&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">expect</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> Component <span class="token operator">=</span> <span class="token punctuation">{</span>
  template<span class="token operator">:</span> <span class="token string">&quot;&lt;div&gt;44Hello world&lt;/div&gt;&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// mount 的第二个参数，可以传一些配置项，比如props。这在测试组件时，很好用</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;mounts a component&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Component<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 测试 props 组件传参</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;测试 props 组件传参&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 测试props 传参</span>
  <span class="token keyword">const</span> wrapper <span class="token operator">=</span> <span class="token function">mount</span><span class="token punctuation">(</span>Count<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    props<span class="token operator">:</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toContain</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 测试 ref指定初始值</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 测试点击事件</span>
  <span class="token keyword">const</span> button <span class="token operator">=</span> wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  button<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 测试msg渲染</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;.msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><p>安装 vscode 插件，配置测试 debug 环境</p><ul><li>插件商店搜索 Vitest 安装</li><li>点击 debug 选择 node 配置 .vscode 文件夹下 launch.json 文件</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token comment">// Use IntelliSense to learn about possible attributes.</span>
  <span class="token comment">// Hover to view descriptions of existing attributes.</span>
  <span class="token comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.2.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;configurations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token string">&quot;launch&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Debug Current Test File&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;autoAttachChildProcesses&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;skipFiles&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;&lt;node_internals&gt;/**&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;**/node_modules/**&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;program&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\${workspaceRoot}/node_modules/vitest/vitest.mjs&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\${relativeFile}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;smartStep&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;console&quot;</span><span class="token operator">:</span> <span class="token string">&quot;integratedTerminal&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>点击 debug 运行 <img src="`+v+'" alt="" loading="lazy"><img src="'+m+'" alt="" loading="lazy"></p></li></ol><h2 id="集成打印插件" tabindex="-1"><a class="header-anchor" href="#集成打印插件" aria-hidden="true">#</a> 集成打印插件</h2>',6),O={href:"https://printjs.crabbly.com/#documentation",target:"_blank",rel:"noopener noreferrer"},U=n("li",null,[s("安装 "),n("code",null,"pnpm add print-js")],-1),$=e(`<h2 id="配置-env" tabindex="-1"><a class="header-anchor" href="#配置-env" aria-hidden="true">#</a> 配置 .env</h2><ol><li>vite.config.ts 读取</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> root <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">loadEnv</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 读取值 env.VITE_APP_SERVICE;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>ts 文件读取<code>i<wbr>mport.meta.env.VITE_APP_TITLE</code></li></ol><h2 id="import-meta-glob-批量导入文件夹下文件" tabindex="-1"><a class="header-anchor" href="#import-meta-glob-批量导入文件夹下文件" aria-hidden="true">#</a> i<wbr>mport.meta.glob 批量导入文件夹下文件</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">addRouter</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">&quot;./views/**.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> path <span class="token keyword">in</span> modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modules<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mod<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> file <span class="token operator">=</span> mod<span class="token punctuation">.</span>default<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        router<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          path<span class="token operator">:</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
          name<span class="token operator">:</span> file<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
          component<span class="token operator">:</span> file<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解决-vite-首屏加载缓慢问题" tabindex="-1"><a class="header-anchor" href="#解决-vite-首屏加载缓慢问题" aria-hidden="true">#</a> 解决 vite 首屏加载缓慢问题</h2><p>参考文章：</p>`,8),G={href:"https://blog.csdn.net/m0_67265464/article/details/125345620",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://segmentfault.com/a/1190000042723516",target:"_blank",rel:"noopener noreferrer"},H=e(`<p>采用判断是否为生产环境，生产环境打包，自动加载，开发环境全局引入，修改 vite.config.ts 文件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> command<span class="token punctuation">,</span> mode <span class="token punctuation">}</span><span class="token operator">:</span> ConfigEnv<span class="token punctuation">)</span><span class="token operator">:</span> UserConfig <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 读取环境变量配置</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">loadEnv</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 判断是否为打包环境</span>
  <span class="token keyword">const</span> isBuild <span class="token operator">=</span> command <span class="token operator">===</span> <span class="token string">&quot;build&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">vueJsx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// ant design vue 按需加载</span>
      <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        resolvers<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token function">AntDesignVueResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span> importStyle<span class="token operator">:</span> isBuild <span class="token operator">?</span> <span class="token string">&quot;less&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>全局引入在 main.ts 文件中，目前未实现环境变量的判断，如需打包，请手动注释掉全局引入的 ant-design-vue 样式</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 生产环境下，注释掉下面的全局样式引入</span>
<span class="token keyword">import</span> <span class="token string">&quot;ant-design-vue/dist/antd.less&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="利用-plop-自定义脚手架" tabindex="-1"><a class="header-anchor" href="#利用-plop-自定义脚手架" aria-hidden="true">#</a> 利用 plop，自定义脚手架</h2><p>Plop 是一个小而美的脚手架工具，它主要用于创建项目中特定类型的文件，Plop 主要集成在项目中使用，帮助我们快速生成一定规范的初始模板文件</p><ol><li>安装 <code>pnpm add plop -D</code></li><li>在项目根目录下创建 <code>plopfile.js</code> 文件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>
<span class="token keyword">import</span> componentsSetting <span class="token keyword">from</span> <span class="token string">&quot;./plop-templates/components/prompt.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> pageSetting <span class="token keyword">from</span> <span class="token string">&quot;./plop-templates/pages/prompt.js&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  plop<span class="token punctuation">.</span><span class="token function">setWelcomeMessage</span><span class="token punctuation">(</span><span class="token string">&quot;请选择需要创建的模式：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&quot;components&quot;</span><span class="token punctuation">,</span> componentsSetting<span class="token punctuation">)</span><span class="token punctuation">;</span>
  plop<span class="token punctuation">.</span><span class="token function">setGenerator</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> pageSetting<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><p>在项目根目录下创建<code>plop-templates</code>文件夹</p><ul><li>新建 components 文件夹，添加文件<code>prompt.js</code>指令文件和<code>index.hbs</code>模板文件</li><li>prompt.js 指令内容</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&quot;fs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getFolder</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
  files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">lstatSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> item <span class="token operator">!==</span> <span class="token string">&quot;components&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      components<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      components<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">getFolder</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> components<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> componentsSetting <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&quot;创建组件&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">// 提示数组</span>
  <span class="token literal-property property">prompts</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;confirm&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;isGlobal&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;是否为全局组件&quot;</span><span class="token punctuation">,</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;请选择组件创建目录&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token function">getFolder</span><span class="token punctuation">(</span><span class="token string">&quot;src/components&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">when</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">answers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">!</span>answers<span class="token punctuation">.</span>isGlobal<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;请输入组件名称&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>v <span class="token operator">||</span> v<span class="token punctuation">.</span>trim <span class="token operator">===</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token string">&quot;组件名称不能为空&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// 行为数组</span>
  <span class="token function-variable function">actions</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>isGlobal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      path <span class="token operator">=</span> <span class="token string">&quot;src/components/{{properCase name}}/index.vue&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token punctuation">.</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/components/{{properCase name}}/index.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span>
        path<span class="token punctuation">,</span>
        <span class="token literal-property property">templateFile</span><span class="token operator">:</span> <span class="token string">&quot;plop-templates/components/index.hbs&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> actions<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> componentsSetting<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>index.hbs 模板内容</li></ul><div class="language-hbs line-numbers-mode" data-ext="hbs"><pre class="language-hbs"><code><span class="token punctuation">&lt;</span><span class="token variable">template</span><span class="token punctuation">&gt;</span>
  <span class="token punctuation">&lt;</span><span class="token variable">div</span><span class="token punctuation">&gt;</span>
    <span class="token punctuation">&lt;</span><span class="token punctuation">!</span><span class="token variable">--</span> <span class="token variable">布局</span> <span class="token variable">--</span><span class="token punctuation">&gt;</span>
  <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">&gt;</span>
<span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">template</span><span class="token punctuation">&gt;</span>

<span class="token punctuation">&lt;</span><span class="token variable">script</span> <span class="token variable">lang</span><span class="token punctuation">=</span><span class="token string">&quot;ts&quot;</span> <span class="token variable">setup</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">#</span><span class="token variable">if</span> <span class="token variable">isGlobal</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token variable">name</span><span class="token punctuation">=</span><span class="token string">&quot;{{ properCase name }}&quot;</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">/</span><span class="token variable">if</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&gt;</span>
<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">逻辑代码</span>
<span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">script</span><span class="token punctuation">&gt;</span>

<span class="token punctuation">&lt;</span><span class="token variable">style</span> <span class="token variable">lang</span><span class="token punctuation">=</span><span class="token string">&quot;scss&quot;</span> <span class="token variable">scoped</span><span class="token punctuation">&gt;</span>
<span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">样式</span>
<span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">style</span><span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在项目 package.json 添加 <code>&quot;cli&quot;: &quot;plop&quot;,</code> 命令</p></li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>
<span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;cli&quot;</span><span class="token operator">:</span> <span class="token string">&quot;plop&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>通过 <code>pnpm cli</code> 选择创建项目代码模板 <img src="`+b+`" alt="" loading="lazy"></li></ol><h2 id="集成-mockjs-模拟后台接口" tabindex="-1"><a class="header-anchor" href="#集成-mockjs-模拟后台接口" aria-hidden="true">#</a> 集成 mockjs 模拟后台接口</h2><ol><li><p>安装依赖</p><ul><li>pnpm add mockjs</li><li>pnpm add @types/mockjs -D</li><li>pnpm add vite-plugin-mock -D</li></ul></li><li><p>配置 vite.config.ts 文件</p><ul><li>引入插件 <code>import { viteMockServe } from &quot;vite-plugin-mock&quot;;</code></li><li>在 数组中进行配置</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> command<span class="token punctuation">,</span> mode <span class="token punctuation">}</span><span class="token operator">:</span> ConfigEnv<span class="token punctuation">)</span><span class="token operator">:</span> UserConfig <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 读取环境变量配置</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> env <span class="token operator">=</span> <span class="token function">loadEnv</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> isBuild <span class="token operator">=</span> command <span class="token operator">===</span> <span class="token string">&quot;build&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">//....</span>
      <span class="token function">viteMockServe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        mockPath<span class="token operator">:</span> <span class="token string">&quot;src/mock&quot;</span><span class="token punctuation">,</span>
        localEnabled<span class="token operator">:</span> <span class="token operator">!</span>isBuild<span class="token punctuation">,</span>
        prodEnabled<span class="token operator">:</span> isBuild<span class="token punctuation">,</span>
        injectCode<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      import { setupProdMockServer } from &#39;./mockProdServer&#39;;
      setupProdMockServer();
      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建 src\\mockProdServer.ts 文件与 main.ts 文件同级</p></li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createProdMockServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite-plugin-mock/es/createProdMockServer&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> mocks<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mockContext <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">&quot;./mock/*.ts&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  eager<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>mockContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  mocks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">(</span>mockContext<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">setupProdMockServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">createProdMockServer</span><span class="token punctuation">(</span>mocks<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>新建 src\\mock 文件夹，mock 文件下，新建业务模块 login.ts</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&quot;/api/sys/login&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 模拟登录接口</span>
    method<span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 请求方式</span>
    timeout<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token comment">// 超时事件</span>
    statusCode<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 返回的http状态码</span>
    <span class="token function-variable function">response</span><span class="token operator">:</span> <span class="token punctuation">(</span>option<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 返回的结果集</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
        message<span class="token operator">:</span> <span class="token string">&quot;登录成功&quot;</span><span class="token punctuation">,</span>
        data<span class="token operator">:</span> <span class="token punctuation">{</span>
          failure_time<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">,</span>
          account<span class="token operator">:</span> option<span class="token punctuation">.</span>body<span class="token punctuation">.</span>account<span class="token punctuation">,</span>
          token<span class="token operator">:</span> <span class="token string">&quot;@string&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>利用封装的 api 调用 /api/sys/login 接口</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">postAction</span><span class="token punctuation">(</span><span class="token string">&quot;/sys/login&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> userName<span class="token operator">:</span> userName<span class="token punctuation">,</span> password<span class="token operator">:</span> password <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>res<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义按钮权限指令" tabindex="-1"><a class="header-anchor" href="#自定义按钮权限指令" aria-hidden="true">#</a> 自定义按钮权限指令</h2><ol><li>在 directive 文件夹下，新建 permission.ts 文件。添加权限指令代码</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 引入vue中定义的指令对应的类型定义</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Directive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> permission<span class="token operator">:</span> Directive <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// mounted是指令的一个生命周期</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> binding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// value 获取用户使用自定义指令绑定的内容</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token operator">=</span> binding<span class="token punctuation">;</span>
    <span class="token comment">// 获取用户所有的权限按钮</span>
    <span class="token comment">// const permissionBtn: any = sessionStorage.getItem(&quot;permission&quot;);</span>
    <span class="token keyword">const</span> permissionBtn<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dashboard.admin&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// 判断用户使用自定义指令，是否使用正确了</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> value <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token builtin">Array</span></span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> permissionFunc <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token comment">//判断传递进来的按钮权限，用户是否拥有</span>
      <span class="token comment">//Array.some(), 数组中有一个结果是true返回true，剩下的元素不会再检测</span>
      <span class="token keyword">const</span> hasPermission <span class="token operator">=</span> permissionBtn<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span>role<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> permissionFunc<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 当用户没有这个按钮权限时，返回false，使用自定义指令的钩子函数，操作dom元素删除该节点</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasPermission<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// el.style.display = &quot;none&quot;;</span>
        el<span class="token punctuation">.</span>parentNode <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">传入关于权限的数组，如 v-permission=&quot;[&#39;admin&#39;,&#39;user&#39;]&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> permission<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在 directive 文件夹下，新建 index.ts 批量注册指令</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Directive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> permission <span class="token keyword">from</span> <span class="token string">&quot;./permission&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 自定义指令</span>
<span class="token keyword">const</span> directives <span class="token operator">=</span> <span class="token punctuation">{</span> permission <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">install</span><span class="token punctuation">(</span>app<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>directives<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// Object.keys() 返回一个数组，值是所有可遍历属性的key名</span>
      app<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span>directives <span class="token keyword">as</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> Directive <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//key是自定义指令名字；后面应该是自定义指令的值，值类型是string</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在 main.ts 文件引入，注册自定义指令</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> directive <span class="token keyword">from</span> <span class="token string">&quot;./directive&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>directive<span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="处理-px-转-rem-和-css-自动添加浏览器前缀" tabindex="-1"><a class="header-anchor" href="#处理-px-转-rem-和-css-自动添加浏览器前缀" aria-hidden="true">#</a> 处理 px 转 rem，和 css 自动添加浏览器前缀</h2><ol><li>安装<code>pnpm add postcss-pxtorem autoprefixer -D</code></li><li>vite.config.ts 配置</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> postCssPxToRem <span class="token keyword">from</span> <span class="token string">&quot;postcss-pxtorem&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> autoprefixer <span class="token keyword">from</span> <span class="token string">&quot;autoprefixer&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> command<span class="token punctuation">,</span> mode <span class="token punctuation">}</span><span class="token operator">:</span> ConfigEnv<span class="token punctuation">)</span><span class="token operator">:</span> UserConfig <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    css<span class="token operator">:</span> <span class="token punctuation">{</span>
      postcss<span class="token operator">:</span> <span class="token punctuation">{</span>
        plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token function">postCssPxToRem</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token comment">// 自适应，px&gt;rem转换</span>
            rootValue<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token comment">// 1rem的大小</span>
            propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 需要转换的属性，这里选择全部都进行转换</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token function">autoprefixer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token comment">// 自动添加前缀</span>
            overrideBrowserslist<span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token string">&quot;Android 4.1&quot;</span><span class="token punctuation">,</span>
              <span class="token string">&quot;iOS 7.1&quot;</span><span class="token punctuation">,</span>
              <span class="token string">&quot;Chrome &gt; 31&quot;</span><span class="token punctuation">,</span>
              <span class="token string">&quot;ff &gt; 31&quot;</span><span class="token punctuation">,</span>
              <span class="token string">&quot;ie &gt;= 8&quot;</span><span class="token punctuation">,</span>
              <span class="token comment">//&#39;last 2 versions&#39;, // 所有主流浏览器最近2个版本</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            grid<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="monorepo" tabindex="-1"><a class="header-anchor" href="#monorepo" aria-hidden="true">#</a> Monorepo</h2>`,29),W={href:"https://juejin.cn/post/6964328103447363614#heading-1",target:"_blank",rel:"noopener noreferrer"},J=e(`<ol><li>项目根目录新建 <code>pnpm-workspace.yaml</code> 文件</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">packages</span><span class="token punctuation">:</span>
  <span class="token comment"># all packages in subdirs of packages/ and components/</span>
  <span class="token punctuation">-</span> <span class="token string">&quot;packages/**&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>将 <code>@zero-admin/utils</code> 安装 到 @zero-admin/chart 执行命令<code>pnpm i @zero-admin/utils -r --filter @zero-admin/chart</code></li><li>将 <code>@zero-admin/chart</code> 安装到根项目 package.json 文件中，执行命令 <code>pnpm i @zero-admin/chart -w</code></li></ol><h2 id="图像编辑器" tabindex="-1"><a class="header-anchor" href="#图像编辑器" aria-hidden="true">#</a> 图像编辑器</h2><h3 id="流程图" tabindex="-1"><a class="header-anchor" href="#流程图" aria-hidden="true">#</a> 流程图</h3><h4 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h4><ol><li>流程图核心包<code>pnpm add @logicflow/core -w</code></li><li>流程图扩展包<code>pnpm add @logicflow/extension -w</code></li><li>格式化展示 json 数据 <code>pnpm add vue-json-pretty -w</code></li></ol><h4 id="初始化容器及-logicflow-对象" tabindex="-1"><a class="header-anchor" href="#初始化容器及-logicflow-对象" aria-hidden="true">#</a> 初始化容器及 LogicFlow 对象</h4><h5 id="准备容器" tabindex="-1"><a class="header-anchor" href="#准备容器" aria-hidden="true">#</a> 准备容器</h5><h2 id="国际化" tabindex="-1"><a class="header-anchor" href="#国际化" aria-hidden="true">#</a> 国际化</h2><ol><li>安装<code>pnpm add vue-i18n</code></li></ol><h2 id="读取-makdown-文档-编写组件说明文档" tabindex="-1"><a class="header-anchor" href="#读取-makdown-文档-编写组件说明文档" aria-hidden="true">#</a> 读取 makdown 文档，编写组件说明文档</h2><ol><li>安装依赖 pnpm add @kangc/v-md-editor@next -D pnpm add prismjs -S pnpm add @types/prismjs -D</li><li>在 setting 文件夹下新建 mdEditor.ts 文件</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> VueMarkdownEditor <span class="token keyword">from</span> <span class="token string">&quot;@kangc/v-md-editor&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;@kangc/v-md-editor/lib/style/base-editor.css&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> vuepressTheme <span class="token keyword">from</span> <span class="token string">&quot;@kangc/v-md-editor/lib/theme/vuepress.js&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;@kangc/v-md-editor/lib/theme/style/vuepress.css&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> Prism <span class="token keyword">from</span> <span class="token string">&quot;prismjs&quot;</span><span class="token punctuation">;</span>

VueMarkdownEditor<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vuepressTheme<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  Prism<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> VueMarkdownEditor<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在 main.ts 文件中引入挂载</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&quot;./App.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> VueMarkdownEditor <span class="token keyword">from</span> <span class="token string">&quot;@/setting/mdEditor&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueMarkdownEditor<span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>在组件中使用</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-md-editor</span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>markdownTable<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>calc(100vh - 293px)<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preview<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v-md-editor</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> markdownTable <span class="token keyword">from</span> <span class="token string">&quot;./README.md?raw&quot;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),Q={href:"https://ckang1229.gitee.io/vue-markdown-editor/zh/",target:"_blank",rel:"noopener noreferrer"},K=e('<h2 id="maptalks-threejs-demo-示例" tabindex="-1"><a class="header-anchor" href="#maptalks-threejs-demo-示例" aria-hidden="true">#</a> maptalks + threejs demo 示例</h2><ol><li>项目依赖 <code>pnpm add three maptalks maptalks.three --save</code></li><li>Demo 源码文件:文件路径: <code>src\\views\\charts\\smartCity.vue</code></li><li>访问 Demo <ul><li>启动项目 <code>pnpm dev</code></li><li>浏览器访问路径 <code>http://localhost:3030/city</code></li></ul></li></ol><h2 id="使用-commitizen-规范-git-提交" tabindex="-1"><a class="header-anchor" href="#使用-commitizen-规范-git-提交" aria-hidden="true">#</a> 使用 commitizen 规范 git 提交</h2>',3),X={href:"https://juejin.cn/post/7079785777692934174#heading-28",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://cz-git.qbb.sh/zh/",target:"_blank",rel:"noopener noreferrer"},nn=e(`<ol><li><p>安装依赖 <code>pnpm install commitizen @commitlint/config-conventional @commitlint/cli commitlint-config-cz cz-git -D</code></p></li><li><p>配置 package.json</p></li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  ...
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;git:comment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;引导设置规范化的提交信息&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;git&quot;</span><span class="token operator">:</span> <span class="token string">&quot;git pull &amp;&amp; git add . &amp;&amp; git-cz &amp;&amp; git push&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token property">&quot;husky&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;pre-commit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lint-staged&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;commit-msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commitlint -E HUSKY_GIT_PARAMS&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;src/**/*.{js,ts,vue}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;prettier --write --ignore-unknown --no-error-on-unmatched-pattern&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;package.json&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;prettier --write&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;commitizen&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/cz-git&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>项目根目录新建 commitlint.config.js 添加配置</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 继承的规则</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@commitlint/config-conventional&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cz&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// 定义规则类型</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// type 类型定义，表示 git 提交的 type 必须在以下类型范围内</span>
    <span class="token string-property property">&quot;type-enum&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span>
        <span class="token string">&quot;feature&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 新功能（feature）</span>
        <span class="token string">&quot;bug&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 此项特别针对bug号，用于向测试反馈bug列表的bug修改情况</span>
        <span class="token string">&quot;fix&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 修补bug</span>
        <span class="token string">&quot;ui&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 更新 ui</span>
        <span class="token string">&quot;docs&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 文档（documentation）</span>
        <span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 格式（不影响代码运行的变动）</span>
        <span class="token string">&quot;perf&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 性能优化</span>
        <span class="token string">&quot;release&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 发布</span>
        <span class="token string">&quot;deploy&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 部署</span>
        <span class="token string">&quot;refactor&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 重构（即不是新增功能，也不是修改bug的代码变动）</span>
        <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 增加测试</span>
        <span class="token string">&quot;chore&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 构建过程或辅助工具的变动</span>
        <span class="token string">&quot;revert&quot;</span><span class="token punctuation">,</span> <span class="token comment">// feat(pencil): add ‘graphiteWidth’ option (撤销之前的commit)</span>
        <span class="token string">&quot;merge&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 合并分支， 例如： merge（前端页面）： feature-xxxx修改线程地址</span>
        <span class="token string">&quot;build&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 打包</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;type&gt; 格式 小写</span>
    <span class="token string-property property">&quot;type-case&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lower-case&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;type&gt; 不能为空</span>
    <span class="token string-property property">&quot;type-empty&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;scope&gt; 范围不能为空</span>
    <span class="token string-property property">&quot;scope-empty&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;scope&gt; 范围格式</span>
    <span class="token string-property property">&quot;scope-case&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;subject&gt; 主要 message 不能为空</span>
    <span class="token string-property property">&quot;subject-empty&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;subject&gt; 以什么为结束标志，禁用</span>
    <span class="token string-property property">&quot;subject-full-stop&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;subject&gt; 格式，禁用</span>
    <span class="token string-property property">&quot;subject-case&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;never&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// &lt;body&gt; 以空行开头</span>
    <span class="token string-property property">&quot;body-leading-blank&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;header-max-length&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;always&quot;</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">prompt</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">fd</span><span class="token operator">:</span> <span class="token string">&quot;docs: fix typos&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;选择你要提交的类型 :&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">scope</span><span class="token operator">:</span> <span class="token string">&quot;选择一个提交范围（可选）:&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">customScope</span><span class="token operator">:</span> <span class="token string">&quot;请输入自定义的提交范围 :&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&quot;填写简短精炼的变更描述 :\\n&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;填写更加详细的变更描述（可选）。使用 &quot;|&quot; 换行 :\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">breaking</span><span class="token operator">:</span> <span class="token string">&#39;列举非兼容性重大的变更（可选）。使用 &quot;|&quot; 换行 :\\n&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">footerPrefixesSelect</span><span class="token operator">:</span> <span class="token string">&quot;选择关联issue前缀（可选）:&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">customFooterPrefix</span><span class="token operator">:</span> <span class="token string">&quot;输入自定义issue前缀 :&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token string">&quot;列举关联issue (可选) 例如: #31, #I3244 :\\n&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">confirmCommit</span><span class="token operator">:</span> <span class="token string">&quot;是否提交或修改commit ?(y/n/e/h)&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;feat&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;feat:     新增功能 | A new feature&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;fix&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;fix:      修复缺陷 | A bug fix&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;docs&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;docs:     文档更新 | Documentation only changes&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;style&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;style:    代码格式 | Changes that do not affect the meaning of the code&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;refactor&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;refactor: 代码重构 | A code change that neither fixes a bug nor adds a feature&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;perf&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;perf:     性能提升 | A code change that improves performance&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;test:     测试相关 | Adding missing tests or correcting existing tests&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;build&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;build:    构建相关 | Changes that affect the build system or external dependencies&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;ci&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;ci:       持续集成 | Changes to our CI configuration files and scripts&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;revert&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;revert:   回退代码 | Revert to a commit&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;chore&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;chore:    其他修改 | Other changes that do not modify src or test files&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">allowCustomScopes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">skipQuestions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;footer&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-hooks-工具" tabindex="-1"><a class="header-anchor" href="#git-hooks-工具" aria-hidden="true">#</a> Git hooks 工具</h2>`,5),sn={href:"https://blog.csdn.net/weixin_45731256/article/details/128417944?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-128417944-blog-105216342.pc_relevant_multi_platform_whitelistv3&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-128417944-blog-105216342.pc_relevant_multi_platform_whitelistv3&utm_relevant_index=1",target:"_blank",rel:"noopener noreferrer"},an=e(`<ol><li>安装依赖 <code>pnpm add lint-staged husky -D -w</code></li><li>添加package.json 脚本</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;prepare&quot;</span><span class="token operator">:</span> <span class="token string">&quot;husky install&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>初始化husky将 git hooks钩子交由husky执行<code>pnpm run prepare</code></li><li>npx husky add .husky/pre-commit &quot;pnpm run eslint&quot;</li><li>pnpm husky add .husky/commit-msg &#39;pnpm commitlint --edit $1&#39;</li></ol><h3 id="git-使用命令" tabindex="-1"><a class="header-anchor" href="#git-使用命令" aria-hidden="true">#</a> git 使用命令</h3><ol><li><p>克隆远程仓库代码 <code>git clone https://gitee.com/zmmlet/zero-admin.git</code></p></li><li><p>第 1 步：同步远程仓库代码：<code>git pull</code><code>git add</code> / <code>git commit</code> 代码之前首先 <code>git pull</code>，需先从服务器上面拉取代码，以防覆盖别人代码；如果有冲突，先备份自己的代码，<code>git checkout</code> 下远程库里最新的的代码，将自己的代码合并进去，然后再提交代码。</p></li><li><p>第 2 步：查看当前状态：<code>git status</code> 使用 <code>git status</code> 来查看当前状态，红色的字体显示的就是你修改的文件</p></li><li><p>第 3 步：提交代码到本地 <code>git</code> 缓存区：<code>git add</code> 情形一：如果你 <code>git status</code> 查看了当前状态发现都是你修改过的文件，都要提交，那么你可以直接使用 <code>git add .</code> 就可以把你的内容全部添加到本地 git 缓存区中 情形二：如果你 <code>git status</code> 查看了当前状态发现有部分文件你不想提交，那么就使用 <code>git add xxx</code>(上图中的红色文字的文件链接) 就可以提交部分文件到本地 git 缓存区。</p></li><li><p>第 4 步：推送代码到本地 <code>git</code> 库：<code>git commit</code><code>git commit -m</code> &quot;提交代码&quot; 推送修改到本地 git 库中</p></li><li><p>第 5 步：提交本地代码到远程仓库：<code>git push</code><code>git push</code> &lt;远程主机名&gt; &lt;远程分支名&gt; 把当前提交到 <code>git</code> 本地仓库的代码推送到远程主机的某个远程分之上</p></li></ol><h2 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈" aria-hidden="true">#</a> 技术栈</h2>`,6),tn={href:"https://www.tslang.cn/docs/handbook/basic-types.html",target:"_blank",rel:"noopener noreferrer"},en={href:"https://cn.vuejs.org/guide/introduction.html",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://pinia.web3doc.top/introduction.html",target:"_blank",rel:"noopener noreferrer"},on={href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://www.pnpm.cn/installation",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://vitejs.cn/guide/#scaffolding-your-first-vite-project",target:"_blank",rel:"noopener noreferrer"},un={href:"https://cn.vitest.dev/guide/",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://juejin.cn/post/7158331832512020511#heading-9",target:"_blank",rel:"noopener noreferrer"};function dn(kn,vn){const a=l("ExternalLinkIcon");return o(),c("div",null,[h,n("p",null,[n("a",q,[s("VSCode"),t(a)]),s(" + "),n("a",y,[s("Volar"),t(a)]),s(" (并禁用 Vetur 扩展插件) + "),n("a",f,[s("TypeScript Vue Plugin (Volar)"),t(a)]),s(".")]),x,n("p",null,[s("默认情况下，TypeScript 无法处理“.vue”导入的类型信息，因此我们将“tsc”CLI 替换为“vue-tsc”进行类型检查。在编辑中，我们需要 "),n("a",w,[s("TypeScript Vue Plugin (Volar)"),t(a)]),s(" 以使 TypeScript 语言服务了解“.vue”类型。")]),n("p",null,[s("如果你觉得独立的 TypeScript 插件不够快，Volar 还实现了一个 "),n("a",_,[s("Take Over Mode"),t(a)]),s(" that 这更有表现力。您可以通过以下步骤启用它：")]),j,i(" 好玩的404页面：https://github.com/pkfrom/404 "),S,n("p",null,[s("git clone "),n("a",z,[s("https://gitee.com/zmmlet/zero-admin.git"),t(a)])]),C,n("p",null,[n("a",E,[s("Vite 配置参考"),t(a)]),s(".")]),D,n("h3",V,[A,s(" 运行单元测试 "),n("a",P,[s("Vitest"),t(a)])]),T,n("h3",I,[N,s(" 语法规则和代码风格检查 "),n("a",M,[s("ESLint"),t(a)])]),R,n("p",null,[n("a",L,[s("vitest"),t(a)]),s(" 参考文章："),n("a",B,[s("https://juejin.cn/post/7148371296055722015"),t(a)])]),F,n("ol",null,[n("li",null,[s("官网："),n("a",O,[s("https://printjs.crabbly.com/#documentation"),t(a)])]),U]),$,n("ul",null,[n("li",null,[n("a",G,[s("https://blog.csdn.net/m0_67265464/article/details/125345620"),t(a)])]),n("li",null,[n("a",Y,[s("https://segmentfault.com/a/1190000042723516"),t(a)])])]),H,n("p",null,[s("Monorepo 是一种项目管理方式，就是把多个项目放在一个仓库里面 "),n("a",W,[s("https://juejin.cn/post/6964328103447363614#heading-1"),t(a)])]),J,n("blockquote",null,[n("p",null,[s("将资源引入为字符串：资源可以使用 ?raw 后缀声明作为字符串引入 官网："),n("a",Q,[s("https://ckang1229.gitee.io/vue-markdown-editor/zh/"),t(a)])])]),K,n("ul",null,[n("li",null,[n("a",X,[s("https://juejin.cn/post/7079785777692934174#heading-28"),t(a)])]),n("li",null,[n("a",Z,[s("https://cz-git.qbb.sh/zh/"),t(a)])])]),nn,n("p",null,[n("a",sn,[s("vue3 使用 husky + commitlint 强制码提交规范"),t(a)])]),an,n("ul",null,[n("li",null,[n("a",tn,[s("typeScript"),t(a)])]),n("li",null,[n("a",en,[s("vue3"),t(a)])]),n("li",null,[n("a",pn,[s("pinia"),t(a)])]),n("li",null,[n("a",on,[s("axios"),t(a)])]),n("li",null,[n("a",cn,[s("pnpm"),t(a)])]),n("li",null,[n("a",ln,[s("vite"),t(a)])]),n("li",null,[n("a",un,[s("vitest"),t(a)])]),n("li",null,[n("a",rn,[s("vue3+setup+ts"),t(a)])])])])}const bn=p(g,[["render",dn],["__file","zeroAdmin后台框架.html.vue"]]);export{bn as default};
