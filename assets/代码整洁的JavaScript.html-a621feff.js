const l=JSON.parse('{"key":"v-009232ed","path":"/read/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E7%9A%84JavaScript.html","title":"代码整洁的 JavaScript","lang":"zh-CN","frontmatter":{"description":"代码整洁的 JavaScript 提示 原项目地址 目录 简介 变量 函数 对象和数据结构 类 SOLID 测试 并发 错误处理 格式化 注释 Translation","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/read/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E7%9A%84JavaScript.html"}],["meta",{"property":"og:site_name","content":"我睡着的时候不困唉"}],["meta",{"property":"og:title","content":"代码整洁的 JavaScript"}],["meta",{"property":"og:description","content":"代码整洁的 JavaScript 提示 原项目地址 目录 简介 变量 函数 对象和数据结构 类 SOLID 测试 并发 错误处理 格式化 注释 Translation"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"我睡着的时候不困唉"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码整洁的 JavaScript\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我睡着的时候不困唉\\",\\"url\\":\\"https://zmmlet.github.io/zmmblog/\\"}]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"使用有意义并且可读的变量名称","slug":"使用有意义并且可读的变量名称","link":"#使用有意义并且可读的变量名称","children":[]},{"level":3,"title":"为相同类型的变量使用相同的词汇","slug":"为相同类型的变量使用相同的词汇","link":"#为相同类型的变量使用相同的词汇","children":[]},{"level":3,"title":"使用可搜索的名称","slug":"使用可搜索的名称","link":"#使用可搜索的名称","children":[]},{"level":3,"title":"使用解释性的变量","slug":"使用解释性的变量","link":"#使用解释性的变量","children":[]},{"level":3,"title":"避免心理映射","slug":"避免心理映射","link":"#避免心理映射","children":[]},{"level":3,"title":"不添加不必要的上下文","slug":"不添加不必要的上下文","link":"#不添加不必要的上下文","children":[]},{"level":3,"title":"使用默认变量替代短路运算或条件","slug":"使用默认变量替代短路运算或条件","link":"#使用默认变量替代短路运算或条件","children":[]}]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"函数参数 (两个以下最理想)","slug":"函数参数-两个以下最理想","link":"#函数参数-两个以下最理想","children":[]},{"level":3,"title":"函数应当只做一件事情","slug":"函数应当只做一件事情","link":"#函数应当只做一件事情","children":[]},{"level":3,"title":"函数名称应该说明它要做什么","slug":"函数名称应该说明它要做什么","link":"#函数名称应该说明它要做什么","children":[]},{"level":3,"title":"函数应该只有一个抽象级别","slug":"函数应该只有一个抽象级别","link":"#函数应该只有一个抽象级别","children":[]},{"level":3,"title":"移除冗余代码","slug":"移除冗余代码","link":"#移除冗余代码","children":[]},{"level":3,"title":"使用 Object.assign 设置默认对象","slug":"使用-object-assign-设置默认对象","link":"#使用-object-assign-设置默认对象","children":[]},{"level":3,"title":"不要使用标记位做为函数参数","slug":"不要使用标记位做为函数参数","link":"#不要使用标记位做为函数参数","children":[]},{"level":3,"title":"避免副作用","slug":"避免副作用","link":"#避免副作用","children":[]},{"level":3,"title":"不要写入全局函数","slug":"不要写入全局函数","link":"#不要写入全局函数","children":[]},{"level":3,"title":"函数式编程优于指令式编程","slug":"函数式编程优于指令式编程","link":"#函数式编程优于指令式编程","children":[]},{"level":3,"title":"封装条件语句","slug":"封装条件语句","link":"#封装条件语句","children":[]},{"level":3,"title":"避免负面条件","slug":"避免负面条件","link":"#避免负面条件","children":[]},{"level":3,"title":"避免条件语句","slug":"避免条件语句","link":"#避免条件语句","children":[]},{"level":3,"title":"避免类型检查 (part 1)","slug":"避免类型检查-part-1","link":"#避免类型检查-part-1","children":[]},{"level":3,"title":"避免类型检查 (part 2)","slug":"避免类型检查-part-2","link":"#避免类型检查-part-2","children":[]},{"level":3,"title":"不要过度优化","slug":"不要过度优化","link":"#不要过度优化","children":[]},{"level":3,"title":"移除僵尸代码","slug":"移除僵尸代码","link":"#移除僵尸代码","children":[]}]},{"level":2,"title":"对象和数据结构","slug":"对象和数据结构","link":"#对象和数据结构","children":[{"level":3,"title":"使用 getters 和 setters","slug":"使用-getters-和-setters","link":"#使用-getters-和-setters","children":[]},{"level":3,"title":"让对象拥有私有成员","slug":"让对象拥有私有成员","link":"#让对象拥有私有成员","children":[]}]},{"level":2,"title":"类","slug":"类","link":"#类","children":[{"level":3,"title":"ES2015/ES6 类优先与 ES5 纯函数","slug":"es2015-es6-类优先与-es5-纯函数","link":"#es2015-es6-类优先与-es5-纯函数","children":[]},{"level":3,"title":"使用方法链","slug":"使用方法链","link":"#使用方法链","children":[]},{"level":3,"title":"组合优先于继承","slug":"组合优先于继承","link":"#组合优先于继承","children":[]}]},{"level":2,"title":"SOLID","slug":"solid","link":"#solid","children":[{"level":3,"title":"单一职责原则 (SRP)","slug":"单一职责原则-srp","link":"#单一职责原则-srp","children":[]},{"level":3,"title":"开闭原则 (OCP)","slug":"开闭原则-ocp","link":"#开闭原则-ocp","children":[]},{"level":3,"title":"里氏代换原则 (LSP)","slug":"里氏代换原则-lsp","link":"#里氏代换原则-lsp","children":[]},{"level":3,"title":"接口隔离原则 (ISP)","slug":"接口隔离原则-isp","link":"#接口隔离原则-isp","children":[]},{"level":3,"title":"依赖反转原则 (DIP)","slug":"依赖反转原则-dip","link":"#依赖反转原则-dip","children":[]}]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[{"level":3,"title":"一个测试一个概念","slug":"一个测试一个概念","link":"#一个测试一个概念","children":[]}]},{"level":2,"title":"并发","slug":"并发","link":"#并发","children":[{"level":3,"title":"使用 Promises, 不要使用回调","slug":"使用-promises-不要使用回调","link":"#使用-promises-不要使用回调","children":[]},{"level":3,"title":"Async/Await 比 Promises 更加简洁","slug":"async-await-比-promises-更加简洁","link":"#async-await-比-promises-更加简洁","children":[]}]},{"level":2,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[{"level":3,"title":"不要忽略捕捉到的错误","slug":"不要忽略捕捉到的错误","link":"#不要忽略捕捉到的错误","children":[]},{"level":3,"title":"不要忽略被拒绝的 promise","slug":"不要忽略被拒绝的-promise","link":"#不要忽略被拒绝的-promise","children":[]}]},{"level":2,"title":"格式化","slug":"格式化","link":"#格式化","children":[{"level":3,"title":"使用一致的大小写","slug":"使用一致的大小写","link":"#使用一致的大小写","children":[]},{"level":3,"title":"函数的调用方与被调用方应该靠近","slug":"函数的调用方与被调用方应该靠近","link":"#函数的调用方与被调用方应该靠近","children":[]}]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[{"level":3,"title":"仅仅对包含复杂业务逻辑的东西进行注释","slug":"仅仅对包含复杂业务逻辑的东西进行注释","link":"#仅仅对包含复杂业务逻辑的东西进行注释","children":[]},{"level":3,"title":"不要在代码库中保存注释掉的代码","slug":"不要在代码库中保存注释掉的代码","link":"#不要在代码库中保存注释掉的代码","children":[]},{"level":3,"title":"不要有日志式的注释","slug":"不要有日志式的注释","link":"#不要有日志式的注释","children":[]},{"level":3,"title":"避免占位符","slug":"避免占位符","link":"#避免占位符","children":[]}]},{"level":2,"title":"Translation","slug":"translation","link":"#translation","children":[]}],"git":{},"readingTime":{"minutes":29.46,"words":8838},"filePathRelative":"read/代码整洁的JavaScript.md","excerpt":"<h1> 代码整洁的 JavaScript</h1>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p><a href=\\"https://github.com/alivebao/clean-code-js\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">原项目地址</a></p>\\n</div>\\n<h2> 目录</h2>\\n<ol>\\n<li><a href=\\"#%E7%AE%80%E4%BB%8B\\">简介</a></li>\\n<li><a href=\\"#%E5%8F%98%E9%87%8F\\">变量</a></li>\\n<li><a href=\\"#%E5%87%BD%E6%95%B0\\">函数</a></li>\\n<li><a href=\\"#%E5%AF%B9%E8%B1%A1%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\\">对象和数据结构</a></li>\\n<li><a href=\\"#%E7%B1%BB\\">类</a></li>\\n<li><a href=\\"#solid\\">SOLID</a></li>\\n<li><a href=\\"#%E6%B5%8B%E8%AF%95\\">测试</a></li>\\n<li><a href=\\"#%E5%B9%B6%E5%8F%91\\">并发</a></li>\\n<li><a href=\\"#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86\\">错误处理</a></li>\\n<li><a href=\\"#%E6%A0%BC%E5%BC%8F%E5%8C%96\\">格式化</a></li>\\n<li><a href=\\"#%E6%B3%A8%E9%87%8A\\">注释</a></li>\\n<li><a href=\\"#translation\\">Translation</a></li>\\n</ol>","autoDesc":true}');export{l as data};
