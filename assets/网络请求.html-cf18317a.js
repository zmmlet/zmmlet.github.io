const e=JSON.parse('{"key":"v-4298688e","path":"/frontend/javaScript/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82.html","title":"网络请求","lang":"zh-CN","frontmatter":{"category":["JavaScript"],"tag":["前端","ajax","JavaScript","网络请求"],"description":"网络请求 前端网络请求方式 Ajax 是 Asynchronous JavaScript and XML（异步的 JavaScript 与 XML 技术）的缩写 JQuery ajax 是对原生 XHR 的封装，除此以外还增添了对 JSONP 的支持 fetch 是原生 js 中 Ajax 的替代者，没有使用 XMLHttpRequest 对象，但本身也是原生 js axios、request 开源库 Ajax 同步请求：等待数据加载完成出现页面，先加载数据后进行页面数据展示 异步请求：局部刷新页面，边请求，边展示，利于提高用户体验","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/javaScript/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82.html"}],["meta",{"property":"og:site_name","content":"我睡着的时候不困唉"}],["meta",{"property":"og:title","content":"网络请求"}],["meta",{"property":"og:description","content":"网络请求 前端网络请求方式 Ajax 是 Asynchronous JavaScript and XML（异步的 JavaScript 与 XML 技术）的缩写 JQuery ajax 是对原生 XHR 的封装，除此以外还增添了对 JSONP 的支持 fetch 是原生 js 中 Ajax 的替代者，没有使用 XMLHttpRequest 对象，但本身也是原生 js axios、request 开源库 Ajax 同步请求：等待数据加载完成出现页面，先加载数据后进行页面数据展示 异步请求：局部刷新页面，边请求，边展示，利于提高用户体验"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"我睡着的时候不困唉"}],["meta",{"property":"article:tag","content":"前端"}],["meta",{"property":"article:tag","content":"ajax"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"网络请求"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网络请求\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我睡着的时候不困唉\\",\\"url\\":\\"https://zmmlet.github.io/zmmblog/\\"}]}"]]},"headers":[{"level":2,"title":"前端网络请求方式","slug":"前端网络请求方式","link":"#前端网络请求方式","children":[]},{"level":2,"title":"Ajax","slug":"ajax","link":"#ajax","children":[{"level":3,"title":"1.隐藏帧 iframe","slug":"_1-隐藏帧-iframe","link":"#_1-隐藏帧-iframe","children":[]},{"level":3,"title":"2.Ajax 实现页面的局部刷新","slug":"_2-ajax-实现页面的局部刷新","link":"#_2-ajax-实现页面的局部刷新","children":[]},{"level":3,"title":"3.xhr 对象创建","slug":"_3-xhr-对象创建","link":"#_3-xhr-对象创建","children":[]},{"level":3,"title":"4.GET 请求","slug":"_4-get-请求","link":"#_4-get-请求","children":[]},{"level":3,"title":"5.POST 请求","slug":"_5-post-请求","link":"#_5-post-请求","children":[]},{"level":3,"title":"6.相应状态分析","slug":"_6-相应状态分析","link":"#_6-相应状态分析","children":[]},{"level":3,"title":"7.回调函数","slug":"_7-回调函数","link":"#_7-回调函数","children":[]},{"level":3,"title":"8.xml 数据格式","slug":"_8-xml-数据格式","link":"#_8-xml-数据格式","children":[]},{"level":3,"title":"9.json 数据格式（对象）","slug":"_9-json-数据格式-对象","link":"#_9-json-数据格式-对象","children":[]},{"level":3,"title":"10.异步请求与同步请求的理解","slug":"_10-异步请求与同步请求的理解","link":"#_10-异步请求与同步请求的理解","children":[]},{"level":3,"title":"11.同步请求与异步请求底层原理分析","slug":"_11-同步请求与异步请求底层原理分析","link":"#_11-同步请求与异步请求底层原理分析","children":[]}]},{"level":2,"title":"jQueryAjax","slug":"jqueryajax","link":"#jqueryajax","children":[{"level":3,"title":"jQueryAjax 和原生 Ajax 比较","slug":"jqueryajax-和原生-ajax-比较","link":"#jqueryajax-和原生-ajax-比较","children":[]},{"level":3,"title":"jQueryAjax 封装","slug":"jqueryajax-封装","link":"#jqueryajax-封装","children":[]}]},{"level":2,"title":"fetch","slug":"fetch","link":"#fetch","children":[{"level":3,"title":"fetch 的优点","slug":"fetch-的优点","link":"#fetch-的优点","children":[]},{"level":3,"title":"fetch 基本用法","slug":"fetch-基本用法","link":"#fetch-基本用法","children":[]},{"level":3,"title":"Response 相关属性及方法","slug":"response-相关属性及方法","link":"#response-相关属性及方法","children":[]},{"level":3,"title":"fetch 使用遇到的问题","slug":"fetch-使用遇到的问题","link":"#fetch-使用遇到的问题","children":[]}]},{"level":2,"title":"axios","slug":"axios","link":"#axios","children":[{"level":3,"title":"axios 安装","slug":"axios-安装","link":"#axios-安装","children":[]},{"level":3,"title":"请求拦截","slug":"请求拦截","link":"#请求拦截","children":[]},{"level":3,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":3,"title":"vue.config.js 配置代理","slug":"vue-config-js-配置代理","link":"#vue-config-js-配置代理","children":[]},{"level":3,"title":"使用封装请求","slug":"使用封装请求","link":"#使用封装请求","children":[]}]}],"git":{},"readingTime":{"minutes":16.82,"words":5046},"filePathRelative":"frontend/javaScript/网络请求.md","excerpt":"<h1> 网络请求</h1>\\n<h2> 前端网络请求方式</h2>\\n<ol>\\n<li>Ajax 是 Asynchronous JavaScript and XML（异步的 JavaScript 与 XML 技术）的缩写</li>\\n<li>JQuery ajax 是对原生 XHR 的封装，除此以外还增添了对 JSONP 的支持</li>\\n<li>fetch 是原生 js 中 Ajax 的替代者，没有使用 XMLHttpRequest 对象，但本身也是原生 js</li>\\n<li>axios、request 开源库</li>\\n</ol>\\n<h2> Ajax</h2>\\n<p>同步请求：等待数据加载完成出现页面，先加载数据后进行页面数据展示\\n异步请求：局部刷新页面，边请求，边展示，利于提高用户体验</p>","autoDesc":true}');export{e as data};
